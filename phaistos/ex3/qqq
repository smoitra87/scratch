
############################################################
#                 PHAISTOS v1.0 (rev. N/A)             #
#    A Markov Chain Monte Carlo Simulation Framework       #
#                                                          #
#  Please cite:                                            #
#   Boomsma, Frellsen, Harder, Bottaro, Johansson, Tian    #
#   Stovgaard, Andreetta, Olsson, Valentin, Antonov,       #
#   Christensen, Borg, Jensen, Lindorff-Larsen,            #
#   Ferkinghoff-Borg, Hamelryck, J Comput Chem. 2013       #
#   doi: 10.1002/jcc.23292                                 #
#                                                          #
############################################################

####################### PHAISTOS HELP ######################
#                                                          #
#      All possible phaistos command line options are      #
#                     displayed below.                     #
#                                                          #
#   Note that in some situations, some of these options    #
#      might occur multiple times, using a suffix to       #
#                   distinguish them.                      #
#                                                          #
#    Example:                                              #
#       --move sidechain-rotamer[debug:10]                 #
#              sidechain-rotamer[debug:0]                  #
#                                                          #
#    Will be expanded to:                                  #
#       --move-sidechain-rotamer 2                         #
#       --move-sidechain-rotamer-debug 10                  #
#       --move-sidechain-rotamer-2-debug 0                 #
#                                                          #
############################################################

######################
#### MAIN OPTIONS ####
######################

Command-line-only options:
  -h [ --help ]         help message
  --config-file arg     configuration file

General options:
  --verbose [=arg(=1)] (=1)                             Output information during run
  --debug [=arg(=1)] (=0)                               Debug information level
  --data-dir arg (=/home/subhodeep/local/phaistos/data) Path to Phaistos data directory
  --status-interval arg (=5)                            Frequency of status display
  --chain-type arg (=chainfb)                           Chain type (only chainfb is currently activated)
  --seed arg (=1374517107)                              Seed for random number generator. The default value is the current time. Remove this line 
                                                        from config file to use random seed.
  --timeout-minutes arg (=0)                            Timeout after M minutes of execution
  --timeout-time arg (=0)                               Timeout: exits at time T (seconds from Epoch)
  --temperature arg                                     Temperature (used by non-probabilistic energy terms)

Phaistos mode (predefined combinations of options):
  --mode arg            Phaistos Mode (opls-mc-dynamics|typhon|casp)

Input options:
  --pdb-file arg        Input: pdb filename
  --aa-file arg         Input: amino acid residue sequence filename
  --ss-file arg         Input: secondary structure sequence filename

Chain options:
  --init-from-pdb [=arg(=1)] (=0)                                                                             Whether to initialize the chain from a 
                                                                                                              pdb-file
  --atom-types arg (=BACKBONE_ATOMS BACKBONE_O_ATOMS BACKBONE_H_ATOMS CB_ATOMS SIDECHAIN_ATOMS NON_BACKBONE_H_ATOMS )
                                                                                                              The types of atoms included in the 
                                                                                                              chain


############################
#### SHORTHANDS OPTIONS ####
############################

Shorthand for specification of BackboneDBN model (torus|fb5|torus-cs):
  --backbone-dbn [=arg(=1)] shorthand: backbone-dbn

Energy shorthand:
  --energy [=arg(=1)]   shorthand: energy

Energy shorthand (secondary energy):
  --energy2 [=arg(=1)]  shorthand: energy2

Observable:
  --observable [=arg(=1)] shorthand: observable

Move shorthand:
  --move [=arg(=1)]     shorthand: move

Shorthand for specification of Phaistos procedure(fold|compactify|comparison):
  --procedure [=arg(=1)] shorthand: procedure

opls: All opls terms - incl gbsa (energy):
  --energy-opls [=arg(=1)] Activate energy-opls [number of occurrences]

opls-cached: All opls terms - incl gbsa - cached version (energy):
  --energy-opls-cached [=arg(=1)] Activate energy-opls-cached [number of occurrences]

profasi: All profasi terms (energy):
  --energy-profasi [=arg(=1)] Activate energy-profasi [number of occurrences]

profasi: All profasi terms - cached version(energy):
  --energy-profasi-cached [=arg(=1)] Activate energy-profasi-cached [number of occurrences]

opls: All opls terms - incl gbsa (energy2):
  --energy2-opls [=arg(=1)] Activate energy2-opls [number of occurrences]

opls-cached: All opls terms - incl gbsa - cached version (energy2):
  --energy2-opls-cached [=arg(=1)] Activate energy2-opls-cached [number of occurrences]

profasi: All profasi terms (energy2):
  --energy2-profasi [=arg(=1)] Activate energy2-profasi [number of occurrences]

profasi: All profasi terms - cached version(energy2):
  --energy2-profasi-cached [=arg(=1)] Activate energy2-profasi-cached [number of occurrences]

opls: All opls terms - incl gbsa (observable):
  --observable-opls [=arg(=1)] Activate observable-opls [number of occurrences]

opls-cached: All opls terms - incl gbsa - cached version (observable):
  --observable-opls-cached [=arg(=1)] Activate observable-opls-cached [number of occurrences]

profasi: All profasi terms (observable):
  --observable-profasi [=arg(=1)] Activate observable-profasi [number of occurrences]

profasi: All profasi terms - cached version(observable):
  --observable-profasi-cached [=arg(=1)] Activate observable-profasi-cached [number of occurrences]

Shorthand for specification of Monte Carlo mode (metropolis-hastings|simulated-annealing|greedy-optimization|muninn):
  --monte-carlo [=arg(=1)] shorthand: monte-carlo


###########################
#### PROCEDURE OPTIONS ####
###########################

Options for Phaistos fold procedure:
  --procedure-fold [=arg(= )]                           Activate procedure-fold
  --procedure-fold-debug arg (=0)                       Debug level
  --procedure-fold-energy2-evaluation-interval arg (=0) How often to evaluate energy2 (0:never)

Options for Phaistos comparison procedure:
  --procedure-comparison [=arg(= )]     Activate procedure-comparison
  --procedure-comparison-debug arg (=0) Debug level


#############################
#### MONTE CARLO OPTIONS ####
#############################

General Monte Carlo options:
  --threads arg (=1)                  Number of threads (1: no multithreading)
  --identical-threads [=arg(=1)] (=0) Make all threads identical
  --iterations arg (=10000000)        Number of iterations pr. thread
  --steps-per-move arg (=100)         Number of steps per each move in Monte Carlo run

Metropolis-Hastings options:
  --monte-carlo-metropolis-hastings [=arg(= )]                              Activate monte-carlo-metropolis-hastings [number of occurrences]
  --monte-carlo-metropolis-hastings-debug arg (=0)                          Debug level
  --monte-carlo-metropolis-hastings-declash-on-reinitialize arg (=1)        Whether to remove self-collisions from the chain when reinitializing
  --monte-carlo-metropolis-hastings-maximum-declash-attempts arg (=20000)   The number of times declashing is attempted before a complete 
                                                                            reinitialization is done
  --monte-carlo-metropolis-hastings-reinitialization-interval arg (=0)      How often reinitialization takes place
  --monte-carlo-metropolis-hastings-consistency-check-interval arg (=10000) How often consistency of the chain is checked

Simulated-Annealing options:
  --monte-carlo-simulated-annealing [=arg(= )]                              Activate monte-carlo-simulated-annealing [number of occurrences]
  --monte-carlo-simulated-annealing-debug arg (=2)                          Debug level
  --monte-carlo-simulated-annealing-declash-on-reinitialize arg (=1)        Whether to remove self-collisions from the chain when reinitializing
  --monte-carlo-simulated-annealing-maximum-declash-attempts arg (=20000)   The number of times declashing is attempted before a complete 
                                                                            reinitialization is done
  --monte-carlo-simulated-annealing-reinitialization-interval arg (=0)      How often reinitialization takes place
  --monte-carlo-simulated-annealing-consistency-check-interval arg (=10000) How often consistency of the chain is checked
  --monte-carlo-simulated-annealing-emin arg (=-inf)                        Lower bound on energy
  --monte-carlo-simulated-annealing-emax arg (=inf)                         Upper bound on energy
  --monte-carlo-simulated-annealing-temperature-start arg (=inf)            Starting temperature (must be set to a finite value)
  --monte-carlo-simulated-annealing-temperature-end arg (=1)                Ending temperature (must be set to a finite value)

Greedy optimization options:
  --monte-carlo-greedy-optimization [=arg(= )]                              Activate monte-carlo-greedy-optimization [number of occurrences]
  --monte-carlo-greedy-optimization-debug arg (=0)                          Debug level
  --monte-carlo-greedy-optimization-declash-on-reinitialize arg (=1)        Whether to remove self-collisions from the chain when reinitializing
  --monte-carlo-greedy-optimization-maximum-declash-attempts arg (=20000)   The number of times declashing is attempted before a complete 
                                                                            reinitialization is done
  --monte-carlo-greedy-optimization-reinitialization-interval arg (=0)      How often reinitialization takes place
  --monte-carlo-greedy-optimization-consistency-check-interval arg (=10000) How often consistency of the chain is checked

Muninn options:
  --monte-carlo-muninn [=arg(= )]                                      Activate monte-carlo-muninn [number of occurrences]
  --monte-carlo-muninn-debug arg (=0)                                  Debug level
  --monte-carlo-muninn-declash-on-reinitialize arg (=1)                Whether to remove self-collisions from the chain when reinitializing
  --monte-carlo-muninn-maximum-declash-attempts arg (=20000)           The number of times declashing is attempted before a complete reinitialization
                                                                       is done
  --monte-carlo-muninn-reinitialization-interval arg (=0)              How often reinitialization takes place
  --monte-carlo-muninn-consistency-check-interval arg (=10000)         How often consistency of the chain is checked
  --monte-carlo-muninn-energy-min arg (=-inf)                          Lower bound on energy
  --monte-carlo-muninn-energy-max arg (=inf)                           Upper bound on energy
  --monte-carlo-muninn-histograms-per-reinit arg (=0)                  Number of histogram updates between every reinitialization (zero or negative 
                                                                       means no reinitialization will be done)
  --monte-carlo-muninn-burnin-fraction arg (=2)                        The fraction of initmax used for burn-in (in each thread)
  --monte-carlo-muninn-use-energy2 arg (=0)                            Use the secondary energy as an additional energy in muninn - not used to 
                                                                       estimate histograms
  --monte-carlo-muninn-weight-scheme arg (=multicanonical)             Weight-scheme to use: invk|multicanonical|invkp
  --monte-carlo-muninn-slope-factor-up arg (=0.3)                      Slope factor use for the linear extrapolation of the weights, when the weights
                                                                       are increasing in the direction away from the main area of support
  --monte-carlo-muninn-slope-factor-down arg (=3)                      Slope factor use for the linear extrapolation of the weights, when the weights
                                                                       are decreasing in the direction away from the main area of support
  --monte-carlo-muninn-min-beta arg (=-inf)                            The minimal beta value to be used based on thermodynamics and in the 
                                                                       extrapolation
  --monte-carlo-muninn-max-beta arg (=inf)                             The maximal beta value to be used based on thermodynamics
  --monte-carlo-muninn-initial-beta arg (=nan)                         {The initial beta value to be used (if uninitialized it takes the same value 
                                                                       as min-beta).
  --monte-carlo-muninn-p arg (=0.5)                                    The p value for the invkp scheme, which should be between 0 and 1. If p=0 the 
                                                                       invkp scheme resembles the multicanonical. If p=1 the invkp scheme resembles 
                                                                       the invk.
  --monte-carlo-muninn-resolution arg (=0.2)                           The resolution for the non-uniform binner
  --monte-carlo-muninn-initial-width-is-max-left arg (=1)              Use the initial bin with as maximal bin width, when expanding to the left
  --monte-carlo-muninn-initial-width-is-max-right arg (=0)             Use the initial bin with as maximal bin width, when expanding to the right
  --monte-carlo-muninn-statistics-log-filename arg (=muninn.txt)       The filename (including full path) for the Muninn statistics logfile (default 
                                                                       is Muninn_[PID].txt and is obtained by removing this option from the config 
                                                                       file or setting it to "")
  --monte-carlo-muninn-log-mode arg (=all)                             Muninn log mode (current|all)
  --monte-carlo-muninn-read-statistics-log-filename arg                The filename for reading the Muninn statistics logfile. If the value 
                                                                       difference from the empty string (""), this log file is read and the history 
                                                                       is set based on the content.
  --monte-carlo-muninn-read-fixed-weights-filename arg                 The filename for reading a set of fixed weights for a given region. If the 
                                                                       value difference from the empty string (""), this file is read and the weights
                                                                       are fixed in the given region.
  --monte-carlo-muninn-initial-max arg (=5000)                         Number of iterations used in first round of sampling
  --monte-carlo-muninn-increase-factor arg (=1.07)                     Scaling of iterations used in the subsequent round of sampling
  --monte-carlo-muninn-max-iterations-between-rounds arg (=4294967295) The maximum number of iterations between consecutive histograms
  --monte-carlo-muninn-memory arg (=40)                                The number of consecutive histograms to keep in memory
  --monte-carlo-muninn-min-count arg (=30)                             The minimal number of counts in a bin in order to have support in that bin
  --monte-carlo-muninn-restricted-individual-support arg (=0)          Restrict the support of the individual histograms to only cover the support 
                                                                       for the given histogram
  --monte-carlo-muninn-dynamic-binning arg (=1)                        Use dynamic binning
  --monte-carlo-muninn-max-number-of-bins arg (=1000000)               The maximal number of bins allowed to be used by the binner
  --monte-carlo-muninn-bin-width arg (=0.1)                            Bin width used for non-dynamic binning
  --monte-carlo-muninn-verbose arg (=3)                                The verbose level of Muninn


######################
#### MOVE OPTIONS ####
######################

None - no structural resampling:
  --move-none [=arg(= )]                                Activate move-none [number of occurrences]
  --move-none-debug arg (=0)                            Debug level
  --move-none-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-none-move-length-min arg (=1)                  Minimum move length
  --move-none-move-length-max arg (=1)                  Maximum move length
  --move-none-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied

CRISP (no priors):
  --move-crisp [=arg(= )]                                Activate move-crisp [number of occurrences]
  --move-crisp-debug arg (=0)                            Debug level
  --move-crisp-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-crisp-move-length-min arg (=5)                  Minimum move length
  --move-crisp-move-length-max arg (=5)                  Maximum move length
  --move-crisp-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied
  --move-crisp-std-dev-bond-angle arg (=0.8)             Standard deviation in bond angle change (UNINITIALIZED => constraint off)
  --move-crisp-std-dev-phi-psi arg (=4)                  Standard deviation in dihedral angle change (UNINITIALIZED => constraint off)
  --move-crisp-std-dev-omega arg (=0.8)                  Standard deviation in omega angle change (UNINITIALIZED => constraint off)
  --move-crisp-only-internal-moves arg (=0)              only execute internal moves
  --move-crisp-sample-omega arg (=0)                     sample omega angles during prerotation

CRISP (Engh-Huber bond angle prior):
  --move-crisp-eh [=arg(= )]                                Activate move-crisp-eh [number of occurrences]
  --move-crisp-eh-debug arg (=0)                            Debug level
  --move-crisp-eh-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-crisp-eh-move-length-min arg (=5)                  Minimum move length
  --move-crisp-eh-move-length-max arg (=5)                  Maximum move length
  --move-crisp-eh-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied
  --move-crisp-eh-std-dev-bond-angle arg (=0.8)             Standard deviation in bond angle change (UNINITIALIZED => constraint off)
  --move-crisp-eh-std-dev-phi-psi arg (=4)                  Standard deviation in dihedral angle change (UNINITIALIZED => constraint off)
  --move-crisp-eh-std-dev-omega arg (=0.8)                  Standard deviation in omega angle change (UNINITIALIZED => constraint off)
  --move-crisp-eh-only-internal-moves arg (=0)              only execute internal moves
  --move-crisp-eh-sample-omega arg (=0)                     sample omega angles during prerotation

CRISP (DBN + Engh-Huber prior):
  --move-crisp-dbn-eh [=arg(= )]                                Activate move-crisp-dbn-eh [number of occurrences]
  --move-crisp-dbn-eh-debug arg (=0)                            Debug level
  --move-crisp-dbn-eh-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-crisp-dbn-eh-move-length-min arg (=5)                  Minimum move length
  --move-crisp-dbn-eh-move-length-max arg (=5)                  Maximum move length
  --move-crisp-dbn-eh-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied
  --move-crisp-dbn-eh-std-dev-bond-angle arg (=0.8)             Standard deviation in bondangle change (UNINITIALIZED => constraint off)
  --move-crisp-dbn-eh-std-dev-phi-psi arg (=4)                  Standard deviation in dihedral angle change (UNINITIALIZED => constraint off)
  --move-crisp-dbn-eh-std-dev-omega arg (=0.8)                  Standard deviation in omega angle change (UNINITIALIZED => constraint off)
  --move-crisp-dbn-eh-dbn-consistency-window-size arg (=10)     Size of window used (to each side) when bringing the dbn back to consistency. A good 
                                                                value for the window size is >7, and a negative window size means that the full 
                                                                hidden node sequence is resampled.
  --move-crisp-dbn-eh-dbn-bias-window-size arg (=10)            Size of window used when calculating bias. Approximates the move bias as 
                                                                P(X[i-w,j+w])/P(X'[i-w,j+w]), where w in the window size and [i,j] is the interval 
                                                                where angles have been changed. A good value for the window size is >7, and a 
                                                                negative window size means that the full bias is used.
  --move-crisp-dbn-eh-sample-omega arg (=0)                     sample omega angles during prerotation
  --move-crisp-dbn-eh-only-internal-moves arg (=0)              only execute internal moves

semilocal:
  --move-semilocal [=arg(= )]                                Activate move-semilocal [number of occurrences]
  --move-semilocal-debug arg (=0)                            Debug level
  --move-semilocal-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-semilocal-move-length-min arg (=4)                  Minimum move length
  --move-semilocal-move-length-max arg (=4)                  Maximum move length
  --move-semilocal-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied
  --move-semilocal-only-internal-moves arg (=0)              only execute internal moves
  --move-semilocal-sample-omega arg (=0)                     sample omega angles during prerotation
  --move-semilocal-sample-bond-angle arg (=0)                sample bond angle angles during prerotation
  --move-semilocal-constraint-a arg (=300)                   value of parameter a (global constraint)
  --move-semilocal-constraint-b arg (=10)                    value of parameter a (locality constraint)
  --move-semilocal-omega-scaling arg (=8)                    scaling factor for omega angles
  --move-semilocal-bond-angle-scaling arg (=8)               scaling factor for bond angles
  --move-semilocal-skip-proline-phi arg (=0)                 Whether to skip prolines phi angles (modifiying the proline phi angle introduces an 
                                                             improper torsion change)

semilocal-dbn-eh:
  --move-semilocal-dbn-eh [=arg(= )]                                Activate move-semilocal-dbn-eh [number of occurrences]
  --move-semilocal-dbn-eh-debug arg (=0)                            Debug level
  --move-semilocal-dbn-eh-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-semilocal-dbn-eh-move-length-min arg (=4)                  Minimum move length
  --move-semilocal-dbn-eh-move-length-max arg (=4)                  Maximum move length
  --move-semilocal-dbn-eh-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied
  --move-semilocal-dbn-eh-only-internal-moves arg (=0)              only execute internal moves
  --move-semilocal-dbn-eh-sample-omega arg (=0)                     sample omega angles during prerotation
  --move-semilocal-dbn-eh-sample-bond-angle arg (=0)                sample bond angle angles during prerotation
  --move-semilocal-dbn-eh-constraint-a arg (=300)                   value of parameter a (global constraint)
  --move-semilocal-dbn-eh-constraint-b arg (=10)                    value of parameter a (locality constraint)
  --move-semilocal-dbn-eh-omega-scaling arg (=8)                    scaling factor for omega angles
  --move-semilocal-dbn-eh-bond-angle-scaling arg (=8)               scaling factor for bond angles
  --move-semilocal-dbn-eh-skip-proline-phi arg (=0)                 Whether to skip prolines phi angles (modifiying the proline phi angle introduces 
                                                                    an improper torsion change)

CRA:
  --move-cra [=arg(= )]                                Activate move-cra [number of occurrences]
  --move-cra-debug arg (=0)                            Debug level
  --move-cra-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-cra-move-length-min arg (=5)                  Minimum move length
  --move-cra-move-length-max arg (=5)                  Maximum move length
  --move-cra-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied
  --move-cra-implicit-energy arg (=1)                  Whether the bond angle energy should be divided out (=false) or not (=true)

Sidechain move Basilisk:
  --move-sidechain-basilisk [=arg(= )]                                                            Activate move-sidechain-basilisk [number of 
                                                                                                  occurrences]
  --move-sidechain-basilisk-debug arg (=0)                                                        Debug level
  --move-sidechain-basilisk-weight arg (=1)                                                       Weight used when selecting moves in move collection
  --move-sidechain-basilisk-move-length-min arg (=1)                                              Minimum move length
  --move-sidechain-basilisk-move-length-max arg (=1)                                              Maximum move length
  --move-sidechain-basilisk-regions arg (=[(-2147483648,2147483647)])                             Regions of chain in which move will be applied
  --move-sidechain-basilisk-mocapy-dbn-dir arg (=/home/subhodeep/local/phaistos/data/mocapy_dbns) Path to mocapy model file directory.
  --move-sidechain-basilisk-model-filename arg (=basilisk.dbn)                                    Model filename
  --move-sidechain-basilisk-implicit-energy arg (=1)                                              Whether the dbn bias (implicit energy) should be 
                                                                                                  divided out (=false) or not (=true)
  --move-sidechain-basilisk-ignore-bb arg (=0)                                                    Use the backbone independent version instead
  --move-sidechain-basilisk-reject-broken-prolines arg (=1)                                       Whether to reject moves that produce prolines with 
                                                                                                  broken rings
  --move-sidechain-basilisk-sample-hydrogen-chis arg (=0)                                         Sample sidechain residual dofs
  --move-sidechain-basilisk-sample-hydrogen-chis-normal arg (=1)                                  Resampling constrained to a gaussian around the 
                                                                                                  current state, false=uniform
  --move-sidechain-basilisk-sample-hydrogen-chis-sigma arg (=0.00349066)                          Std. of gaussian for resampling residual dofs

Sidechain move - Basilisk local:
  --move-sidechain-basilisk-local [=arg(= )]                                                            Activate move-sidechain-basilisk-local 
                                                                                                        [number of occurrences]
  --move-sidechain-basilisk-local-debug arg (=0)                                                        Debug level
  --move-sidechain-basilisk-local-weight arg (=1)                                                       Weight used when selecting moves in move 
                                                                                                        collection
  --move-sidechain-basilisk-local-move-length-min arg (=1)                                              Minimum move length
  --move-sidechain-basilisk-local-move-length-max arg (=1)                                              Maximum move length
  --move-sidechain-basilisk-local-regions arg (=[(-2147483648,2147483647)])                             Regions of chain in which move will be 
                                                                                                        applied
  --move-sidechain-basilisk-local-mocapy-dbn-dir arg (=/home/subhodeep/local/phaistos/data/mocapy_dbns) Path to mocapy model file directory.
  --move-sidechain-basilisk-local-model-filename arg (=basilisk.dbn)                                    Model filename
  --move-sidechain-basilisk-local-implicit-energy arg (=1)                                              Whether the dbn bias (implicit energy) should
                                                                                                        be divided out (=false) or not (=true)

Sidechain move - Basilisk Multi:
  --move-sidechain-basilisk-multi [=arg(= )]                                                            Activate move-sidechain-basilisk-multi 
                                                                                                        [number of occurrences]
  --move-sidechain-basilisk-multi-debug arg (=0)                                                        Debug level
  --move-sidechain-basilisk-multi-weight arg (=1)                                                       Weight used when selecting moves in move 
                                                                                                        collection
  --move-sidechain-basilisk-multi-move-length-min arg (=1)                                              Minimum move length
  --move-sidechain-basilisk-multi-move-length-max arg (=1)                                              Maximum move length
  --move-sidechain-basilisk-multi-regions arg (=[(-2147483648,2147483647)])                             Regions of chain in which move will be 
                                                                                                        applied
  --move-sidechain-basilisk-multi-mocapy-dbn-dir arg (=/home/subhodeep/local/phaistos/data/mocapy_dbns) Path to mocapy model file directory.
  --move-sidechain-basilisk-multi-model-filename arg (=basilisk.dbn)                                    Model filename
  --move-sidechain-basilisk-multi-implicit-energy arg (=1)                                              Whether the dbn bias (implicit energy) should
                                                                                                        be divided out (=false) or not (=true)
  --move-sidechain-basilisk-multi-multi-count arg (=3)                                                  How many side chains to resample in each move

Sidechain move - Compas:
  --move-sidechain-compas [=arg(= )]                                                            Activate move-sidechain-compas [number of 
                                                                                                occurrences]
  --move-sidechain-compas-debug arg (=0)                                                        Debug level
  --move-sidechain-compas-weight arg (=1)                                                       Weight used when selecting moves in move collection
  --move-sidechain-compas-move-length-min arg (=1)                                              Minimum move length
  --move-sidechain-compas-move-length-max arg (=1)                                              Maximum move length
  --move-sidechain-compas-regions arg (=[(-2147483648,2147483647)])                             Regions of chain in which move will be applied
  --move-sidechain-compas-mocapy-dbn-dir arg (=/home/subhodeep/local/phaistos/data/mocapy_dbns) Path to mocapy model file directory.
  --move-sidechain-compas-model-filename arg (=compas.dbn)                                      Model filename
  --move-sidechain-compas-implicit-energy arg (=1)                                              Whether the dbn bias (implicit energy) should be 
                                                                                                divided out (=false) or not (=true)

DBN:
  --move-backbone-dbn [=arg(= )]                                Activate move-backbone-dbn [number of occurrences]
  --move-backbone-dbn-debug arg (=0)                            Debug level
  --move-backbone-dbn-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-backbone-dbn-move-length-min arg (=1)                  Minimum move length
  --move-backbone-dbn-move-length-max arg (=1)                  Maximum move length
  --move-backbone-dbn-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied
  --move-backbone-dbn-resample-mode arg (=resample-all)         Specifies what is resampled when the move is applied: 
                                                                resample-all|resample-hidden-only|resample-angles-only
  --move-backbone-dbn-implicit-energy arg (=1)                  Whether the dihedral energy from the dbn should be divided out (=false) or not 
                                                                (=true)
  --move-backbone-dbn-dbn-consistency-window-size arg (=10)     Size of window used (to each side) when bringing the dbn back to consistency. A good 
                                                                value for the window size is >7, and a negative window size means that the full 
                                                                hidden node sequence is resampled.
  --move-backbone-dbn-dbn-bias-window-size arg (=10)            Size of window used when calculating bias. Approximates the move bias as 
                                                                (X[i-w,j+w])/P(X'[i-w,j+w]), where w in the window size and [i,j] is the interval 
                                                                where angles have been changed. A good value for the window size is >7, and a 
                                                                negative window size means that the full bias is used.

Crankshaft:
  --move-crankshaft [=arg(= )]                                Activate move-crankshaft [number of occurrences]
  --move-crankshaft-debug arg (=0)                            Debug level
  --move-crankshaft-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-crankshaft-move-length-min arg (=2)                  Minimum move length
  --move-crankshaft-move-length-max arg (=12)                 Maximum move length
  --move-crankshaft-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied
  --move-crankshaft-only-internal-moves arg (=0)              only execute internal moves
  --move-crankshaft-constrain-bond-angle arg (=0)             constrain bond angle variation
  --move-crankshaft-bond-angle-tolerance arg (=15)            tolerance of  bond angle variation (deg)

Local pivot move:
  --move-pivot-local [=arg(= )]                                Activate move-pivot-local [number of occurrences]
  --move-pivot-local-debug arg (=0)                            Debug level
  --move-pivot-local-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-pivot-local-move-length-min arg (=1)                  Minimum move length
  --move-pivot-local-move-length-max arg (=1)                  Maximum move length
  --move-pivot-local-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied
  --move-pivot-local-sample-bond-angle-dofs arg (=1)           Whether bond angles should be sampled
  --move-pivot-local-sample-phi-psi-dofs arg (=1)              Whether dihedral angles should be sampled
  --move-pivot-local-sample-omega-dofs arg (=0)                Whether omega angles should be sampled
  --move-pivot-local-std-dev-bond-angle arg (=0.8)             Standard deviation in bond angle change (degr.) (UNINITIALIZED => constraint off)
  --move-pivot-local-std-dev-phi-psi arg (=4)                  Standard deviation in dihedral angle change (degr.) (UNINITIALIZED => constraint off)
  --move-pivot-local-std-dev-omega arg (=0.8)                  Standard deviation in omega angle change (degr.) (UNINITIALIZED => constraint off)

Local pivot move (DBN prior):
  --move-pivot-local-dbn [=arg(= )]                                Activate move-pivot-local-dbn [number of occurrences]
  --move-pivot-local-dbn-debug arg (=0)                            Debug level
  --move-pivot-local-dbn-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-pivot-local-dbn-move-length-min arg (=1)                  Minimum move length
  --move-pivot-local-dbn-move-length-max arg (=1)                  Maximum move length
  --move-pivot-local-dbn-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied
  --move-pivot-local-dbn-sample-bond-angle-dofs arg (=0)           Whether bond angles should be sampled
  --move-pivot-local-dbn-sample-phi-psi-dofs arg (=1)              Whether dihedral angles should be sampled
  --move-pivot-local-dbn-sample-omega-dofs arg (=0)                Whether omega angles should be sampled
  --move-pivot-local-dbn-std-dev-bond-angle arg (=0.8)             Standard deviation in bond angle change (degr.) (UNINITIALIZED => constraint off)
  --move-pivot-local-dbn-std-dev-phi-psi arg (=4)                  Standard deviation in dihedral angle change (degr.) (UNINITIALIZED => constraint 
                                                                   off)
  --move-pivot-local-dbn-std-dev-omega arg (=0.8)                  Standard deviation in omega angle change (degr.) (UNINITIALIZED => constraint off)

Pivot - sampling changes to phi,psi angles from uniform distributions:
  --move-pivot-uniform [=arg(= )]                                Activate move-pivot-uniform [number of occurrences]
  --move-pivot-uniform-debug arg (=0)                            Debug level
  --move-pivot-uniform-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-pivot-uniform-move-length-min arg (=1)                  Minimum move length
  --move-pivot-uniform-move-length-max arg (=1)                  Maximum move length
  --move-pivot-uniform-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied
  --move-pivot-uniform-single-dof-only arg (=1)                  Whether only to resample a single dof in each iteration (selected randomly)
  --move-pivot-uniform-skip-proline-phi arg (=1)                 Whether to skip prolines phi angles (modifiying the proline phi angle introduces an 
                                                                 improper torsion change)
  --move-pivot-uniform-max-delta arg (=3.14159)                  Maximum change in angle value

Rotamer sidechain move:
  --move-sidechain-rotamer [=arg(= )]                                Activate move-sidechain-rotamer [number of occurrences]
  --move-sidechain-rotamer-debug arg (=0)                            Debug level
  --move-sidechain-rotamer-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-sidechain-rotamer-move-length-min arg (=1)                  Minimum move length
  --move-sidechain-rotamer-move-length-max arg (=1)                  Maximum move length
  --move-sidechain-rotamer-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied
  --move-sidechain-rotamer-implicit-energy arg (=1)                  Whether the rotamer bias (implicit energy) should be divided out (=false) or not
                                                                     (=true)
  --move-sidechain-rotamer-sigma-scale-factor arg (=1)               Flatten/sharpen rotamer distributions by scaling sigma
  --move-sidechain-rotamer-rotamer-state-resample-frequency arg (=1) Frequency with which move will resample rotamer state
  --move-sidechain-rotamer-sample-hydrogen-chis arg (=1)             Whether hydrogen chi angles should be resampled (uniformly)
  --move-sidechain-rotamer-skip-proline arg (=1)                     Whether to skip prolines (prolines introduce a change in bond length which must 
                                                                     be taken into account by the forcefield)

Uniform sidechain move:
  --move-sidechain-uniform [=arg(= )]                                Activate move-sidechain-uniform [number of occurrences]
  --move-sidechain-uniform-debug arg (=0)                            Debug level
  --move-sidechain-uniform-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-sidechain-uniform-move-length-min arg (=1)                  Minimum move length
  --move-sidechain-uniform-move-length-max arg (=1)                  Maximum move length
  --move-sidechain-uniform-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied
  --move-sidechain-uniform-single-dof-only arg (=1)                  Whether only to resample a single dof in each iteration (selected randomly)
  --move-sidechain-uniform-skip-proline arg (=1)                     Whether to skip prolines (prolines introduce a change in bond length which must 
                                                                     be taken into account by the forcefield)

Local sidechain move:
  --move-sidechain-local [=arg(= )]                                Activate move-sidechain-local [number of occurrences]
  --move-sidechain-local-debug arg (=0)                            Debug level
  --move-sidechain-local-weight arg (=1)                           Weight used when selecting moves in move collection
  --move-sidechain-local-move-length-min arg (=1)                  Minimum move length
  --move-sidechain-local-move-length-max arg (=1)                  Maximum move length
  --move-sidechain-local-regions arg (=[(-2147483648,2147483647)]) Regions of chain in which move will be applied
  --move-sidechain-local-sigma-major-dofs arg (=0.0349066)         Standard deviation of gaussian surrounding current sidechain for major degrees of 
                                                                   freedom
  --move-sidechain-local-sigma-minor-dofs arg (=0.00349066)        Standard deviation of gaussian surrounding current sidechain for minor degrees of 
                                                                   freedom
  --move-sidechain-local-sample-major-dofs arg (=1)                Whether major dofs (chi angles) should be resampled
  --move-sidechain-local-sample-minor-dofs arg (=0)                Whether minor dofs (side chain bond angles, CB|O bond angle|dihedral, etc)
  --move-sidechain-local-mode arg (=simple)                        Move mode (simple,scale-sigma,select-dofs,constrain-all-endpoints,constrain-one-en
                                                                   dpoint)
  --move-sidechain-local-lagrange-multiplier arg (=200)            When using constrain-endpoint mode, this controls the weight of the constraint.
  --move-sidechain-local-skip-proline arg (=1)                     Whether to skip prolines (prolines introduce a change in bond length which must be
                                                                   taken into account by the forcefield)


########################
#### ENERGY OPTIONS ####
########################

none - empty energy term (energy):
  --energy-none [=arg(= )] Activate energy-none

Clash-fast (energy):
  --energy-clash-fast [=arg(= )]                         Activate energy-clash-fast [number of occurrences]
  --energy-clash-fast-debug arg (=0)                     Debug level
  --energy-clash-fast-weight arg (=1)                    Weight used when summing energy terms
  --energy-clash-fast-only-modified-pairs arg (=1)       Specifies whether energy should consider only pairs modified by the last move. If a 
                                                         clashfree structure is maintained at all times, this is sufficient to detect all clashes
  --energy-clash-fast-boolean-mode arg (=1)              Specifies whether energy should work in clash/non-clash mode and return infinity/0 (true) or
                                                         count all the clashes and return the number of clashes (false)
  --energy-clash-fast-minimum-residue-distance arg (=2)  Minimum distance along chain (measured in number of residues) before pair is taken into 
                                                         account by the energy
  --energy-clash-fast-clash-distance-h arg (=1.5)        Distance within which pairs of hydrogens are considered to be clashing (in angstrom)
  --energy-clash-fast-clash-distance-no arg (=2.3)       Distance within which pairs of Nitrogen-Oxygen pairs are considered to be clashing (in 
                                                         angstrom)
  --energy-clash-fast-clash-distance-ps arg (=1.9)       Distance within which pairs of pseudo-sidechain atom pairs are considered to be clashing (in
                                                         angstrom)
  --energy-clash-fast-clash-distance-sg arg (=1.8)       Distance within which pairs of SG atom pairs are considered to be clashing (in angstrom)
  --energy-clash-fast-clash-distance-any-pair arg (=2.3) Default distance within which pairs of atom pairs of all other types are considered to be 
                                                         clashing (in angstrom)

rg: Radius of gyration (energy):
  --energy-rg [=arg(= )]      Activate energy-rg [number of occurrences]
  --energy-rg-debug arg (=0)  Debug level
  --energy-rg-weight arg (=1) Weight used when summing energy terms

rmsd: Root mean square deviation (energy):
  --energy-rmsd [=arg(= )]             Activate energy-rmsd [number of occurrences]
  --energy-rmsd-debug arg (=0)         Debug level
  --energy-rmsd-weight arg (=1)        Weight used when summing energy terms
  --energy-rmsd-reference-pdb-file arg PDB containing reference structure.
  --energy-rmsd-ca-only arg (=1)       Whether to only include C-alphas in the RMSD calculation.
  --energy-rmsd-residue-start arg (=0) Start residue.
  --energy-rmsd-residue-end arg (=-1)  End residue.

contact-map (energy):
  --energy-contact-map [=arg(= )]                        Activate energy-contact-map [number of occurrences]
  --energy-contact-map-debug arg (=0)                    Debug level
  --energy-contact-map-weight arg (=1)                   Weight used when summing energy terms
  --energy-contact-map-contact-map-file arg              path to contact map file
  --energy-contact-map-contact-map-string arg            String containing contacts
  --energy-contact-map-pdb-file arg                      path to pdb file for constructing contact map
  --energy-contact-map-cutoff arg (=inf)                 contact cutoff distance when constructing map from pdb
  --energy-contact-map-minimum-residue-distance arg (=7) Minimum separation between two residues before they are considered.
  --energy-contact-map-iteration-type arg (=ALL)         Which atoms to include when constructing contactmap from chain
  --energy-contact-map-dist-squared arg (=0)             set contact energy ~ (r-r0)^2/width (default: exp(-(r-r0)^2/width)
  --energy-contact-map-potential-width arg (=1)          Width of energy potential

q-factor: percentage of native contacts in chain (energy):
  --energy-q-factor [=arg(= )]                        Activate energy-q-factor [number of occurrences]
  --energy-q-factor-debug arg (=0)                    Debug level
  --energy-q-factor-weight arg (=1)                   Weight used when summing energy terms
  --energy-q-factor-contact-map-file arg              path to contact map file
  --energy-q-factor-contact-map-string arg            String containing contacts
  --energy-q-factor-pdb-file arg                      path to pdb file for constructing contact map
  --energy-q-factor-cutoff arg (=inf)                 contact cutoff distance when constructing map from pdb
  --energy-q-factor-minimum-residue-distance arg (=7) Minimum separation between two residues before they are considered.
  --energy-q-factor-iteration-type arg (=ALL)         Which atoms to include when constructing contactmap from chain
  --energy-q-factor-use-weights arg (=0)              Whether to use contact weights to calculate a weighted version of the q factor

helix-content: percentage of chain that is in a helical conformation (energy):
  --energy-helix-content [=arg(= )]                  Activate energy-helix-content [number of occurrences]
  --energy-helix-content-debug arg (=0)              Debug level
  --energy-helix-content-weight arg (=1)             Weight used when summing energy terms
  --energy-helix-content-min-angle1 arg (=-1.5708)   Minimum boundary for angle1
  --energy-helix-content-max-angle1 arg (=-0.523599) Maximum boundary for angle1
  --energy-helix-content-min-angle2 arg (=-1.3439)   Minimum boundary for angle2
  --energy-helix-content-max-angle2 arg (=-0.296706) Maximum boundary for angle2

angle-histogram: statistics on angle distributions (energy):
  --energy-angle-histogram [=arg(= )]      Activate energy-angle-histogram [number of occurrences]
  --energy-angle-histogram-debug arg (=0)  Debug level
  --energy-angle-histogram-weight arg (=1) Weight used when summing energy terms
  --energy-angle-histogram-bins arg (=128) Number of bins

angle: statistics on angle distributions (energy):
  --energy-angle [=arg(= )]             Activate energy-angle [number of occurrences]
  --energy-angle-debug arg (=0)         Debug level
  --energy-angle-weight arg (=1)        Weight used when summing energy terms
  --energy-angle-dihedral-only arg (=1) Dump only the dihedral angels.

Multibody multinomial (MuMu) model (energy):
  --energy-mumu [=arg(= )]                                                            Activate energy-mumu [number of occurrences]
  --energy-mumu-debug arg (=0)                                                        Debug level
  --energy-mumu-weight arg (=1)                                                       Weight used when summing energy terms
  --energy-mumu-mocapy-dbn-dir arg (=/home/subhodeep/local/phaistos/data/mocapy_dbns) Path to mocapy model file directory.
  --energy-mumu-model-filename arg (=default)                                         Model filename
  --energy-mumu-reference-model-filename arg (=default)                               Reference model filename
  --energy-mumu-use-ratio arg (=0)                                                    Use the ration method

opls-charge: OPLS charge term (energy):
  --energy-opls-charge [=arg(= )]            Activate energy-opls-charge [number of occurrences]
  --energy-opls-charge-debug arg (=0)        Debug level
  --energy-opls-charge-weight arg (=1.67857) Weight used when summing energy terms

opls-charge-cached: OPLS charge term - cached version (energy):
  --energy-opls-charge-cached [=arg(= )]                 Activate energy-opls-charge-cached [number of occurrences]
  --energy-opls-charge-cached-debug arg (=0)             Debug level
  --energy-opls-charge-cached-weight arg (=1.67857)      Weight used when summing energy terms
  --energy-opls-charge-cached-cutoff-distance arg (=inf) Distance beyond which contributions are set to zero.

opls-vdw: OPLS van der Waals term (energy):
  --energy-opls-vdw [=arg(= )]            Activate energy-opls-vdw [number of occurrences]
  --energy-opls-vdw-debug arg (=0)        Debug level
  --energy-opls-vdw-weight arg (=1.67857) Weight used when summing energy terms

opls-vdw-cached: OPLS van der Waals term - cached version (energy):
  --energy-opls-vdw-cached [=arg(= )]                 Activate energy-opls-vdw-cached [number of occurrences]
  --energy-opls-vdw-cached-debug arg (=0)             Debug level
  --energy-opls-vdw-cached-weight arg (=1.67857)      Weight used when summing energy terms
  --energy-opls-vdw-cached-cutoff-distance arg (=inf) Distance beyond which contributions are set to zero.

opls-angle-bend: OPLS angle bend term (energy):
  --energy-opls-angle-bend [=arg(= )]               Activate energy-opls-angle-bend [number of occurrences]
  --energy-opls-angle-bend-debug arg (=0)           Debug level
  --energy-opls-angle-bend-weight arg (=1.67857)    Weight used when summing energy terms
  --energy-opls-angle-bend-omit-sidechains arg (=0) Exclude sidechain interactions

opls-angle-bend-cached: OPLS angle bend term - cached version (energy):
  --energy-opls-angle-bend-cached [=arg(= )]               Activate energy-opls-angle-bend-cached [number of occurrences]
  --energy-opls-angle-bend-cached-debug arg (=0)           Debug level
  --energy-opls-angle-bend-cached-weight arg (=1.67857)    Weight used when summing energy terms
  --energy-opls-angle-bend-cached-omit-sidechains arg (=0) Exclude sidechain interactions

opls-torsion: OPLS torsion term (energy):
  --energy-opls-torsion [=arg(= )]            Activate energy-opls-torsion [number of occurrences]
  --energy-opls-torsion-debug arg (=0)        Debug level
  --energy-opls-torsion-weight arg (=1.67857) Weight used when summing energy terms

opls-improper-torsion: OPLS improper-torsion term (energy):
  --energy-opls-improper-torsion [=arg(= )]            Activate energy-opls-improper-torsion [number of occurrences]
  --energy-opls-improper-torsion-debug arg (=0)        Debug level
  --energy-opls-improper-torsion-weight arg (=1.67857) Weight used when summing energy terms

opls-bond-stretch: OPLS bond-stretch term (energy):
  --energy-opls-bond-stretch [=arg(= )]            Activate energy-opls-bond-stretch [number of occurrences]
  --energy-opls-bond-stretch-debug arg (=0)        Debug level
  --energy-opls-bond-stretch-weight arg (=1.67857) Weight used when summing energy terms

opls-non-bonded: gbsa, vdw and charge terms (energy):
  --energy-opls-non-bonded [=arg(= )]            Activate energy-opls-non-bonded [number of occurrences]
  --energy-opls-non-bonded-debug arg (=0)        Debug level
  --energy-opls-non-bonded-weight arg (=1.67857) Weight used when summing energy terms

opls-non-bonded-cached: gbsa, vdw and charge terms - cached version (energy):
  --energy-opls-non-bonded-cached [=arg(= )]                               Activate energy-opls-non-bonded-cached [number of occurrences]
  --energy-opls-non-bonded-cached-debug arg (=0)                           Debug level
  --energy-opls-non-bonded-cached-weight arg (=1.67857)                    Weight used when summing energy terms
  --energy-opls-non-bonded-cached-vdw-cutoff-distance arg (=inf)           Distance beyond which vdw contributions are set to zero.
  --energy-opls-non-bonded-cached-charge-cutoff-distance arg (=inf)        Distance beyond which charge contributions are set to zero.
  --energy-opls-non-bonded-cached-gbsa-maximum-deviation-cutoff arg (=0.1) Maximum deviation allowed in born radii in two subtrees of the chaintree 
                                                                           before it is recalculated
  --energy-opls-non-bonded-cached-gbsa-cutoff-distance-phase1 arg (=inf)   Distance beyond which gbsa contributions are set to zero in phase1.
  --energy-opls-non-bonded-cached-gbsa-cutoff-distance-phase2 arg (=inf)   Distance beyond which gbsa contributions are set to zero in phase2.

gbsa: GBSA implicit solvent term (energy):
  --energy-gbsa [=arg(= )]            Activate energy-gbsa [number of occurrences]
  --energy-gbsa-debug arg (=0)        Debug level
  --energy-gbsa-weight arg (=1.67857) Weight used when summing energy terms

gbsa-cached: GBSA implicit solvent term - cached version (energy):
  --energy-gbsa-cached [=arg(= )]                          Activate energy-gbsa-cached [number of occurrences]
  --energy-gbsa-cached-debug arg (=0)                      Debug level
  --energy-gbsa-cached-weight arg (=1.67857)               Weight used when summing energy terms
  --energy-gbsa-cached-maximum-deviation-cutoff arg (=0.1) Maximum deviation allowed in born radii in two subtrees of the chaintree before it is 
                                                           recalculated
  --energy-gbsa-cached-cutoff-distance-phase1 arg (=inf)   Distance beyond which contributions are set to zero in phase1.
  --energy-gbsa-cached-cutoff-distance-phase2 arg (=inf)   Distance beyond which contributions are set to zero in phase2.

profasi-local: Profasi local energy term (energy):
  --energy-profasi-local [=arg(= )]            Activate energy-profasi-local [number of occurrences]
  --energy-profasi-local-debug arg (=0)        Debug level
  --energy-profasi-local-weight arg (=1.67857) Weight used when summing energy terms

profasi-local-cached: Profasi local energy term - cached version(energy):
  --energy-profasi-local-cached [=arg(= )]            Activate energy-profasi-local-cached [number of occurrences]
  --energy-profasi-local-cached-debug arg (=0)        Debug level
  --energy-profasi-local-cached-weight arg (=1.67857) Weight used when summing energy terms

profasi-local-sidechain: Profasi local sidechain energy term (energy):
  --energy-profasi-local-sidechain [=arg(= )]            Activate energy-profasi-local-sidechain [number of occurrences]
  --energy-profasi-local-sidechain-debug arg (=0)        Debug level
  --energy-profasi-local-sidechain-weight arg (=1.67857) Weight used when summing energy terms

profasi-local-sidechain-cached: Profasi local sidechain energy term - cached version(energy):
  --energy-profasi-local-sidechain-cached [=arg(= )]            Activate energy-profasi-local-sidechain-cached [number of occurrences]
  --energy-profasi-local-sidechain-cached-debug arg (=0)        Debug level
  --energy-profasi-local-sidechain-cached-weight arg (=1.67857) Weight used when summing energy terms

profasi-excluded-volume: Profasi excluded volume energy term (energy):
  --energy-profasi-excluded-volume [=arg(= )]            Activate energy-profasi-excluded-volume [number of occurrences]
  --energy-profasi-excluded-volume-debug arg (=0)        Debug level
  --energy-profasi-excluded-volume-weight arg (=1.67857) Weight used when summing energy terms

profasi-excluded-volume-cached: Profasi excluded volume energy term - cached version(energy):
  --energy-profasi-excluded-volume-cached [=arg(= )]            Activate energy-profasi-excluded-volume-cached [number of occurrences]
  --energy-profasi-excluded-volume-cached-debug arg (=0)        Debug level
  --energy-profasi-excluded-volume-cached-weight arg (=1.67857) Weight used when summing energy terms

profasi-excluded-volume-local: Profasi local excluded volume energy term (energy):
  --energy-profasi-excluded-volume-local [=arg(= )]            Activate energy-profasi-excluded-volume-local [number of occurrences]
  --energy-profasi-excluded-volume-local-debug arg (=0)        Debug level
  --energy-profasi-excluded-volume-local-weight arg (=1.67857) Weight used when summing energy terms

profasi-excluded-volume-local-cached: Profasi local excluded volume energy term - cached version(energy):
  --energy-profasi-excluded-volume-local-cached [=arg(= )]            Activate energy-profasi-excluded-volume-local-cached [number of occurrences]
  --energy-profasi-excluded-volume-local-cached-debug arg (=0)        Debug level
  --energy-profasi-excluded-volume-local-cached-weight arg (=1.67857) Weight used when summing energy terms

profasi-hydrogen-bond: Profasi hydrogen bond term (energy):
  --energy-profasi-hydrogen-bond [=arg(= )]                   Activate energy-profasi-hydrogen-bond [number of occurrences]
  --energy-profasi-hydrogen-bond-debug arg (=0)               Debug level
  --energy-profasi-hydrogen-bond-weight arg (=1.67857)        Weight used when summing energy terms
  --energy-profasi-hydrogen-bond-use-ideal-distances arg (=1) Whether to use ideal distance for C-O and H-N.

profasi-hydrogen-bond-cached: Profasi hydrogen bond term - cached version(energy):
  --energy-profasi-hydrogen-bond-cached [=arg(= )]                   Activate energy-profasi-hydrogen-bond-cached [number of occurrences]
  --energy-profasi-hydrogen-bond-cached-debug arg (=0)               Debug level
  --energy-profasi-hydrogen-bond-cached-weight arg (=1.67857)        Weight used when summing energy terms
  --energy-profasi-hydrogen-bond-cached-use-ideal-distances arg (=1) Whether to use ideal distance for C-O and H-N.

profasi-hydrogen-bond-improved: Profasi hydrogen bond term - improved version(energy):
  --energy-profasi-hydrogen-bond-improved [=arg(= )]                   Activate energy-profasi-hydrogen-bond-improved [number of occurrences]
  --energy-profasi-hydrogen-bond-improved-debug arg (=0)               Debug level
  --energy-profasi-hydrogen-bond-improved-weight arg (=1.67857)        Weight used when summing energy terms
  --energy-profasi-hydrogen-bond-improved-use-ideal-distances arg (=1) Whether to use ideal distance for C-O and H-N.

profasi-hydrophobicity: Profasi hydrophobicity term (energy):
  --energy-profasi-hydrophobicity [=arg(= )]            Activate energy-profasi-hydrophobicity [number of occurrences]
  --energy-profasi-hydrophobicity-debug arg (=0)        Debug level
  --energy-profasi-hydrophobicity-weight arg (=1.67857) Weight used when summing energy terms

profasi-hydrophobicity: Profasi hydrophobicity term - cached version(energy):
  --energy-profasi-hydrophobicity-cached [=arg(= )]            Activate energy-profasi-hydrophobicity-cached [number of occurrences]
  --energy-profasi-hydrophobicity-cached-debug arg (=0)        Debug level
  --energy-profasi-hydrophobicity-cached-weight arg (=1.67857) Weight used when summing energy terms

profasi-hydrophobicity: Profasi hydrophobicity term - improved version(energy):
  --energy-profasi-hydrophobicity-improved [=arg(= )]            Activate energy-profasi-hydrophobicity-improved [number of occurrences]
  --energy-profasi-hydrophobicity-improved-debug arg (=0)        Debug level
  --energy-profasi-hydrophobicity-improved-weight arg (=1.67857) Weight used when summing energy terms

profasi-sidechain-charge: Profasi sidechain charge term (energy):
  --energy-profasi-sidechain-charge [=arg(= )]            Activate energy-profasi-sidechain-charge [number of occurrences]
  --energy-profasi-sidechain-charge-debug arg (=0)        Debug level
  --energy-profasi-sidechain-charge-weight arg (=1.67857) Weight used when summing energy terms

profasi-sidechain-charge: Profasi sidechain charge term - cached version(energy):
  --energy-profasi-sidechain-charge-cached [=arg(= )]            Activate energy-profasi-sidechain-charge-cached [number of occurrences]
  --energy-profasi-sidechain-charge-cached-debug arg (=0)        Debug level
  --energy-profasi-sidechain-charge-cached-weight arg (=1.67857) Weight used when summing energy terms

profasi-sidechain-charge: Profasi sidechain charge term - improved version(energy):
  --energy-profasi-sidechain-charge-improved [=arg(= )]            Activate energy-profasi-sidechain-charge-improved [number of occurrences]
  --energy-profasi-sidechain-charge-improved-debug arg (=0)        Debug level
  --energy-profasi-sidechain-charge-improved-weight arg (=1.67857) Weight used when summing energy terms

profasi-proline-phi-torsion: Profasi proline phi torsion term(energy):
  --energy-profasi-proline-phi-torsion [=arg(= )]            Activate energy-profasi-proline-phi-torsion [number of occurrences]
  --energy-profasi-proline-phi-torsion-debug arg (=0)        Debug level
  --energy-profasi-proline-phi-torsion-weight arg (=1.67857) Weight used when summing energy terms

saxs-debye (energy):
  --energy-saxs-debye [=arg(= )]                     Activate energy-saxs-debye [number of occurrences]
  --energy-saxs-debye-debug arg (=0)                 Debug level
  --energy-saxs-debye-weight arg (=1)                Weight used when summing energy terms
  --energy-saxs-debye-saxs-intensities-filename arg  path to file containing SAXS intensities
  --energy-saxs-debye-saxs-form-factors-filename arg path to file containing SAXS form factors
  --energy-saxs-debye-exp-errors-alpha arg (=0.15)   alpha parameter for experimental error term
  --energy-saxs-debye-exp-errors-beta arg (=0.3)     beta parameter for experimental error term
  --energy-saxs-debye-q-bins arg (=51)               number of q-bins used in the curve calculation
  --energy-saxs-debye-q-bins-first arg (=0)          energy evaluation starts at this q-bin (default: 0). the first bin is used for normalization
  --energy-saxs-debye-one-body-model arg (=0)        use one-body instead of two-body form factor model
  --energy-saxs-debye-use-sine-lookup-table arg (=1) use sin() lookup table instead of the full trigonometric evaluation

Basilisk explicit energy function (energy):
  --energy-basilisk [=arg(= )]                                                            Activate energy-basilisk [number of occurrences]
  --energy-basilisk-debug arg (=0)                                                        Debug level
  --energy-basilisk-weight arg (=1)                                                       Weight used when summing energy terms
  --energy-basilisk-mocapy-dbn-dir arg (=/home/subhodeep/local/phaistos/data/mocapy_dbns) Path to mocapy model file directory.
  --energy-basilisk-model-filename arg (=basilisk.dbn)                                    Model filename
  --energy-basilisk-use-cache arg (=1)                                                    Use the cached version of the term (should be faster)
  --energy-basilisk-ignore-bb arg (=0)                                                    Use the backbone independent version instead
  --energy-basilisk-eliminate-move-bias arg (=0)                                          Divide out the move-bias of the corresponding moves. 
                                                                                          Equivalent to (but faster than) setting implicit-energy to 
                                                                                          false.

Compas explicit energy function (energy):
  --energy-compas [=arg(= )]                                                            Activate energy-compas [number of occurrences]
  --energy-compas-debug arg (=0)                                                        Debug level
  --energy-compas-weight arg (=1)                                                       Weight used when summing energy terms
  --energy-compas-mocapy-dbn-dir arg (=/home/subhodeep/local/phaistos/data/mocapy_dbns) Path to mocapy model file directory.
  --energy-compas-model-filename arg (=compas.dbn)                                      Model filename
  --energy-compas-use-cache arg (=1)                                                    Use the cached version of the term (should be faster)
  --energy-compas-ignore-bb arg (=0)                                                    Use the backbone independent version instead
  --energy-compas-eliminate-move-bias arg (=0)                                          Divide out the move-bias of the corresponding moves. 
                                                                                        Equivalent to (but faster than) setting implicit-energy to 
                                                                                        false.

Constrain distances in a protein like HBond networks, C alpha contacts or disulfide bonds (energy):
  --energy-constrain-distances [=arg(= )]                            Activate energy-constrain-distances [number of occurrences]
  --energy-constrain-distances-debug arg (=0)                        Debug level
  --energy-constrain-distances-weight arg (=1)                       Weight used when summing energy terms
  --energy-constrain-distances-network-filename arg                  Restore network from a file.
  --energy-constrain-distances-pdb-file arg                          Path to PDB input file.
  --energy-constrain-distances-include-bb-hbond arg (=1)             Include backbone-backbone hydrogen bonds in the network
  --energy-constrain-distances-include-sc-hbond arg (=1)             Include sidechain-sidechain hydrogen bonds in the network
  --energy-constrain-distances-include-bb-sc-hbond arg (=1)          Include backbone-sidechain hydrogen bonds in the network
  --energy-constrain-distances-include-ca-contacts arg (=1)          Include CA-CA contacts in the network
  --energy-constrain-distances-include-fixed-point-contacts arg (=0) Include contacts between atoms and fixed points in space
  --energy-constrain-distances-include-ss-bond arg (=1)              Include disulfide bonds (SS bonds) in the network
  --energy-constrain-distances-init-hbond-from-native arg (=0)       Whether to initialize ideal hbond distances from PDB file (rather than averages 
                                                                     from the Top500 database)
  --energy-constrain-distances-prune-network arg (=6)                Whether to prune/optimize the hbond network
  --energy-constrain-distances-dehydron-bb-cutoff arg (=14)          Cutoff below which backbone-backbone hydrogen bonds are considered as dehydrated
                                                                     aka weak/broken
  --energy-constrain-distances-dehydron-bb-sc-cutoff arg (=9)        Cutoff below which backbone-sidechain hydrogen bonds are considered as 
                                                                     dehydrated aka weak/broken
  --energy-constrain-distances-dehydron-sc-cutoff arg (=7)           Cutoff below which sidechain-sidechain hydrogen bonds are considered as 
                                                                     dehydrated aka weak/broken
  --energy-constrain-distances-ca-distance arg (=6)                  Cutoff distance in Angstrom to be considered a Calpha contact
  --energy-constrain-distances-ss-distance arg (=3)                  Cutoff distance in Angstrom to be considered a disulfide contact
  --energy-constrain-distances-ca-skip arg (=5)                      How many residues to skip along the chain before considering a Calpha contact
  --energy-constrain-distances-bb-hbond-skip arg (=1)                How many residues to skip along the chain before considering a backbone-backbone
                                                                     hydrogen bond contact
  --energy-constrain-distances-sc-hbond-skip arg (=1)                How many residues to skip along the chain before considering a 
                                                                     sidechain-sidechain hydrogen bond contact
  --energy-constrain-distances-bb-sc-hbond-skip arg (=1)             How many residues to skip along the chain before considering a 
                                                                     backbone-sidechain hydrogen bond contact
  --energy-constrain-distances-ss-skip arg (=1)                      How many residues to skip along the chain before considering a disulfide contact
  --energy-constrain-distances-generate-pymol arg (=0)               Whether to generate a Python script that will visualize the network in PyMOL
  --energy-constrain-distances-use-caching (recommended) arg (=1)    Whether to cache interations
  --energy-constrain-distances-verbose arg (=0)                      Whether to print out additional information (recommended)

Lock disulfide bonds found in proteins in place (energy):
  --energy-constrain-disulfide-bonds [=arg(= )]                         Activate energy-constrain-disulfide-bonds [number of occurrences]
  --energy-constrain-disulfide-bonds-debug arg (=0)                     Debug level
  --energy-constrain-disulfide-bonds-weight arg (=1)                    Weight used when summing energy terms
  --energy-constrain-disulfide-bonds-network-filename arg               Restore network from a file.
  --energy-constrain-disulfide-bonds-include-ss-bond arg (=1)           Include disulfide bonds (SS bonds) in the network
  --energy-constrain-disulfide-bonds-ss-distance arg (=3)               Default CYS(SG)-CYS(SG) cutoff distance.
  --energy-constrain-disulfide-bonds-ss-skip arg (=1)                   Default minimum CYS-CYS distance in the chain.
  --energy-constrain-disulfide-bonds-generate-pymol arg (=0)            Whether to generate a Python script that will visualize the network in PyMOL
  --energy-constrain-disulfide-bonds-use-caching (recommended) arg (=1) Whether to cache interations
  --energy-constrain-disulfide-bonds-verbose arg (=0)                   Whether to print out additional information (recommended)

Visible Volume based solvation energy:
  --energy-visible-volume [=arg(= )]                    Activate energy-visible-volume [number of occurrences]
  --energy-visible-volume-debug arg (=0)                Debug level
  --energy-visible-volume-weight arg (=1)               Weight used when summing energy terms
  --energy-visible-volume-sphere-radius arg (=11)       Max distance to neighbors considered (angstroms)
  --energy-visible-volume-min-sphere-points arg (=1000) Minimum number of discrete angle points in model
  --energy-visible-volume-atom-radius arg (=1.8)        Disk radius of atom neighbors (angstroms)
  --energy-visible-volume-volume arg (=1)               Calculate visible volume (observable only)
  --energy-visible-volume-angexp arg (=0)               Calculate angular exposure (relative residue SASA analog, observable only)
  --energy-visible-volume-fscn arg (=0)                 Calculate first shell coordination number (observable only)
  --energy-visible-volume-fscn-threshold arg (=35)      Minimum number of angle points to define contact (observable only)

backbone-dbn: Backbone DBN energy term (energy):
  --energy-backbone-dbn [=arg(= )]                   Activate energy-backbone-dbn [number of occurrences]
  --energy-backbone-dbn-debug arg (=0)               Debug level
  --energy-backbone-dbn-weight arg (=1)              Weight used when summing energy terms
  --energy-backbone-dbn-enable-dbn-update arg (=1)   Whether to update the angles in the DBN from the chain when necessary.
  --energy-backbone-dbn-always-full-update arg (=0)  Whether to always force update of all angles in the DBN from the chain.
  --energy-backbone-dbn-window-size arg (=-1)        Size of window used when calculating the energy. A good value for the window size is >7, and a 
                                                     negative window size means that the full bias is used.
  --energy-backbone-dbn-eliminate-move-bias arg (=0) Divide out the move-bias of the corresponding moves. Equivalent to (but faster than) setting 
                                                     implicit-energy to false.


##################################
#### SECONDARY ENERGY OPTIONS ####
##################################

none - empty energy term (energy2):
  --energy2-none [=arg(= )] Activate energy2-none

Clash-fast (energy2):
  --energy2-clash-fast [=arg(= )]                         Activate energy2-clash-fast [number of occurrences]
  --energy2-clash-fast-debug arg (=0)                     Debug level
  --energy2-clash-fast-weight arg (=1)                    Weight used when summing energy terms
  --energy2-clash-fast-only-modified-pairs arg (=1)       Specifies whether energy should consider only pairs modified by the last move. If a 
                                                          clashfree structure is maintained at all times, this is sufficient to detect all clashes
  --energy2-clash-fast-boolean-mode arg (=1)              Specifies whether energy should work in clash/non-clash mode and return infinity/0 (true) 
                                                          or count all the clashes and return the number of clashes (false)
  --energy2-clash-fast-minimum-residue-distance arg (=2)  Minimum distance along chain (measured in number of residues) before pair is taken into 
                                                          account by the energy
  --energy2-clash-fast-clash-distance-h arg (=1.5)        Distance within which pairs of hydrogens are considered to be clashing (in angstrom)
  --energy2-clash-fast-clash-distance-no arg (=2.3)       Distance within which pairs of Nitrogen-Oxygen pairs are considered to be clashing (in 
                                                          angstrom)
  --energy2-clash-fast-clash-distance-ps arg (=1.9)       Distance within which pairs of pseudo-sidechain atom pairs are considered to be clashing 
                                                          (in angstrom)
  --energy2-clash-fast-clash-distance-sg arg (=1.8)       Distance within which pairs of SG atom pairs are considered to be clashing (in angstrom)
  --energy2-clash-fast-clash-distance-any-pair arg (=2.3) Default distance within which pairs of atom pairs of all other types are considered to be 
                                                          clashing (in angstrom)

rg: Radius of gyration (energy2):
  --energy2-rg [=arg(= )]      Activate energy2-rg [number of occurrences]
  --energy2-rg-debug arg (=0)  Debug level
  --energy2-rg-weight arg (=1) Weight used when summing energy terms

rmsd: Root mean square deviation (energy2):
  --energy2-rmsd [=arg(= )]             Activate energy2-rmsd [number of occurrences]
  --energy2-rmsd-debug arg (=0)         Debug level
  --energy2-rmsd-weight arg (=1)        Weight used when summing energy terms
  --energy2-rmsd-reference-pdb-file arg PDB containing reference structure.
  --energy2-rmsd-ca-only arg (=1)       Whether to only include C-alphas in the RMSD calculation.
  --energy2-rmsd-residue-start arg (=0) Start residue.
  --energy2-rmsd-residue-end arg (=-1)  End residue.

contact-map (energy2):
  --energy2-contact-map [=arg(= )]                        Activate energy2-contact-map [number of occurrences]
  --energy2-contact-map-debug arg (=0)                    Debug level
  --energy2-contact-map-weight arg (=1)                   Weight used when summing energy terms
  --energy2-contact-map-contact-map-file arg              path to contact map file
  --energy2-contact-map-contact-map-string arg            String containing contacts
  --energy2-contact-map-pdb-file arg                      path to pdb file for constructing contact map
  --energy2-contact-map-cutoff arg (=inf)                 contact cutoff distance when constructing map from pdb
  --energy2-contact-map-minimum-residue-distance arg (=7) Minimum separation between two residues before they are considered.
  --energy2-contact-map-iteration-type arg (=ALL)         Which atoms to include when constructing contactmap from chain
  --energy2-contact-map-dist-squared arg (=0)             set contact energy ~ (r-r0)^2/width (default: exp(-(r-r0)^2/width)
  --energy2-contact-map-potential-width arg (=1)          Width of energy potential

q-factor: percentage of native contacts in chain (energy2):
  --energy2-q-factor [=arg(= )]                        Activate energy2-q-factor [number of occurrences]
  --energy2-q-factor-debug arg (=0)                    Debug level
  --energy2-q-factor-weight arg (=1)                   Weight used when summing energy terms
  --energy2-q-factor-contact-map-file arg              path to contact map file
  --energy2-q-factor-contact-map-string arg            String containing contacts
  --energy2-q-factor-pdb-file arg                      path to pdb file for constructing contact map
  --energy2-q-factor-cutoff arg (=inf)                 contact cutoff distance when constructing map from pdb
  --energy2-q-factor-minimum-residue-distance arg (=7) Minimum separation between two residues before they are considered.
  --energy2-q-factor-iteration-type arg (=ALL)         Which atoms to include when constructing contactmap from chain
  --energy2-q-factor-use-weights arg (=0)              Whether to use contact weights to calculate a weighted version of the q factor

helix-content: percentage of chain that is in a helical conformation (energy2):
  --energy2-helix-content [=arg(= )]                  Activate energy2-helix-content [number of occurrences]
  --energy2-helix-content-debug arg (=0)              Debug level
  --energy2-helix-content-weight arg (=1)             Weight used when summing energy terms
  --energy2-helix-content-min-angle1 arg (=-1.5708)   Minimum boundary for angle1
  --energy2-helix-content-max-angle1 arg (=-0.523599) Maximum boundary for angle1
  --energy2-helix-content-min-angle2 arg (=-1.3439)   Minimum boundary for angle2
  --energy2-helix-content-max-angle2 arg (=-0.296706) Maximum boundary for angle2

angle-histogram: statistics on angle distributions (energy2):
  --energy2-angle-histogram [=arg(= )]      Activate energy2-angle-histogram [number of occurrences]
  --energy2-angle-histogram-debug arg (=0)  Debug level
  --energy2-angle-histogram-weight arg (=1) Weight used when summing energy terms
  --energy2-angle-histogram-bins arg (=128) Number of bins

angle: statistics on angle distributions (energy2):
  --energy2-angle [=arg(= )]             Activate energy2-angle [number of occurrences]
  --energy2-angle-debug arg (=0)         Debug level
  --energy2-angle-weight arg (=1)        Weight used when summing energy terms
  --energy2-angle-dihedral-only arg (=1) Dump only the dihedral angels.

Multibody multinomial (MuMu) model (energy2):
  --energy2-mumu [=arg(= )]                                                            Activate energy2-mumu [number of occurrences]
  --energy2-mumu-debug arg (=0)                                                        Debug level
  --energy2-mumu-weight arg (=1)                                                       Weight used when summing energy terms
  --energy2-mumu-mocapy-dbn-dir arg (=/home/subhodeep/local/phaistos/data/mocapy_dbns) Path to mocapy model file directory.
  --energy2-mumu-model-filename arg (=default)                                         Model filename
  --energy2-mumu-reference-model-filename arg (=default)                               Reference model filename
  --energy2-mumu-use-ratio arg (=0)                                                    Use the ration method

opls-charge: OPLS charge term (energy2):
  --energy2-opls-charge [=arg(= )]            Activate energy2-opls-charge [number of occurrences]
  --energy2-opls-charge-debug arg (=0)        Debug level
  --energy2-opls-charge-weight arg (=1.67857) Weight used when summing energy terms

opls-charge-cached: OPLS charge term - cached version (energy2):
  --energy2-opls-charge-cached [=arg(= )]                 Activate energy2-opls-charge-cached [number of occurrences]
  --energy2-opls-charge-cached-debug arg (=0)             Debug level
  --energy2-opls-charge-cached-weight arg (=1.67857)      Weight used when summing energy terms
  --energy2-opls-charge-cached-cutoff-distance arg (=inf) Distance beyond which contributions are set to zero.

opls-vdw: OPLS van der Waals term (energy2):
  --energy2-opls-vdw [=arg(= )]            Activate energy2-opls-vdw [number of occurrences]
  --energy2-opls-vdw-debug arg (=0)        Debug level
  --energy2-opls-vdw-weight arg (=1.67857) Weight used when summing energy terms

opls-vdw-cached: OPLS van der Waals term - cached version (energy2):
  --energy2-opls-vdw-cached [=arg(= )]                 Activate energy2-opls-vdw-cached [number of occurrences]
  --energy2-opls-vdw-cached-debug arg (=0)             Debug level
  --energy2-opls-vdw-cached-weight arg (=1.67857)      Weight used when summing energy terms
  --energy2-opls-vdw-cached-cutoff-distance arg (=inf) Distance beyond which contributions are set to zero.

opls-angle-bend: OPLS angle bend term (energy2):
  --energy2-opls-angle-bend [=arg(= )]               Activate energy2-opls-angle-bend [number of occurrences]
  --energy2-opls-angle-bend-debug arg (=0)           Debug level
  --energy2-opls-angle-bend-weight arg (=1.67857)    Weight used when summing energy terms
  --energy2-opls-angle-bend-omit-sidechains arg (=0) Exclude sidechain interactions

opls-angle-bend-cached: OPLS angle bend term - cached version (energy2):
  --energy2-opls-angle-bend-cached [=arg(= )]               Activate energy2-opls-angle-bend-cached [number of occurrences]
  --energy2-opls-angle-bend-cached-debug arg (=0)           Debug level
  --energy2-opls-angle-bend-cached-weight arg (=1.67857)    Weight used when summing energy terms
  --energy2-opls-angle-bend-cached-omit-sidechains arg (=0) Exclude sidechain interactions

opls-torsion: OPLS torsion term (energy2):
  --energy2-opls-torsion [=arg(= )]            Activate energy2-opls-torsion [number of occurrences]
  --energy2-opls-torsion-debug arg (=0)        Debug level
  --energy2-opls-torsion-weight arg (=1.67857) Weight used when summing energy terms

opls-improper-torsion: OPLS improper-torsion term (energy2):
  --energy2-opls-improper-torsion [=arg(= )]            Activate energy2-opls-improper-torsion [number of occurrences]
  --energy2-opls-improper-torsion-debug arg (=0)        Debug level
  --energy2-opls-improper-torsion-weight arg (=1.67857) Weight used when summing energy terms

opls-bond-stretch: OPLS bond-stretch term (energy2):
  --energy2-opls-bond-stretch [=arg(= )]            Activate energy2-opls-bond-stretch [number of occurrences]
  --energy2-opls-bond-stretch-debug arg (=0)        Debug level
  --energy2-opls-bond-stretch-weight arg (=1.67857) Weight used when summing energy terms

opls-non-bonded: gbsa, vdw and charge terms (energy2):
  --energy2-opls-non-bonded [=arg(= )]            Activate energy2-opls-non-bonded [number of occurrences]
  --energy2-opls-non-bonded-debug arg (=0)        Debug level
  --energy2-opls-non-bonded-weight arg (=1.67857) Weight used when summing energy terms

opls-non-bonded-cached: gbsa, vdw and charge terms - cached version (energy2):
  --energy2-opls-non-bonded-cached [=arg(= )]                               Activate energy2-opls-non-bonded-cached [number of occurrences]
  --energy2-opls-non-bonded-cached-debug arg (=0)                           Debug level
  --energy2-opls-non-bonded-cached-weight arg (=1.67857)                    Weight used when summing energy terms
  --energy2-opls-non-bonded-cached-vdw-cutoff-distance arg (=inf)           Distance beyond which vdw contributions are set to zero.
  --energy2-opls-non-bonded-cached-charge-cutoff-distance arg (=inf)        Distance beyond which charge contributions are set to zero.
  --energy2-opls-non-bonded-cached-gbsa-maximum-deviation-cutoff arg (=0.1) Maximum deviation allowed in born radii in two subtrees of the chaintree 
                                                                            before it is recalculated
  --energy2-opls-non-bonded-cached-gbsa-cutoff-distance-phase1 arg (=inf)   Distance beyond which gbsa contributions are set to zero in phase1.
  --energy2-opls-non-bonded-cached-gbsa-cutoff-distance-phase2 arg (=inf)   Distance beyond which gbsa contributions are set to zero in phase2.

gbsa: GBSA implicit solvent term (energy2):
  --energy2-gbsa [=arg(= )]            Activate energy2-gbsa [number of occurrences]
  --energy2-gbsa-debug arg (=0)        Debug level
  --energy2-gbsa-weight arg (=1.67857) Weight used when summing energy terms

gbsa-cached: GBSA implicit solvent term - cached version (energy2):
  --energy2-gbsa-cached [=arg(= )]                          Activate energy2-gbsa-cached [number of occurrences]
  --energy2-gbsa-cached-debug arg (=0)                      Debug level
  --energy2-gbsa-cached-weight arg (=1.67857)               Weight used when summing energy terms
  --energy2-gbsa-cached-maximum-deviation-cutoff arg (=0.1) Maximum deviation allowed in born radii in two subtrees of the chaintree before it is 
                                                            recalculated
  --energy2-gbsa-cached-cutoff-distance-phase1 arg (=inf)   Distance beyond which contributions are set to zero in phase1.
  --energy2-gbsa-cached-cutoff-distance-phase2 arg (=inf)   Distance beyond which contributions are set to zero in phase2.

profasi-local: Profasi local energy term (energy2):
  --energy2-profasi-local [=arg(= )]            Activate energy2-profasi-local [number of occurrences]
  --energy2-profasi-local-debug arg (=0)        Debug level
  --energy2-profasi-local-weight arg (=1.67857) Weight used when summing energy terms

profasi-local-cached: Profasi local energy term - cached version(energy2):
  --energy2-profasi-local-cached [=arg(= )]            Activate energy2-profasi-local-cached [number of occurrences]
  --energy2-profasi-local-cached-debug arg (=0)        Debug level
  --energy2-profasi-local-cached-weight arg (=1.67857) Weight used when summing energy terms

profasi-local-sidechain: Profasi local sidechain energy term (energy2):
  --energy2-profasi-local-sidechain [=arg(= )]            Activate energy2-profasi-local-sidechain [number of occurrences]
  --energy2-profasi-local-sidechain-debug arg (=0)        Debug level
  --energy2-profasi-local-sidechain-weight arg (=1.67857) Weight used when summing energy terms

profasi-local-sidechain-cached: Profasi local sidechain energy term - cached version(energy2):
  --energy2-profasi-local-sidechain-cached [=arg(= )]            Activate energy2-profasi-local-sidechain-cached [number of occurrences]
  --energy2-profasi-local-sidechain-cached-debug arg (=0)        Debug level
  --energy2-profasi-local-sidechain-cached-weight arg (=1.67857) Weight used when summing energy terms

profasi-excluded-volume: Profasi excluded volume energy term (energy2):
  --energy2-profasi-excluded-volume [=arg(= )]            Activate energy2-profasi-excluded-volume [number of occurrences]
  --energy2-profasi-excluded-volume-debug arg (=0)        Debug level
  --energy2-profasi-excluded-volume-weight arg (=1.67857) Weight used when summing energy terms

profasi-excluded-volume-cached: Profasi excluded volume energy term - cached version(energy2):
  --energy2-profasi-excluded-volume-cached [=arg(= )]            Activate energy2-profasi-excluded-volume-cached [number of occurrences]
  --energy2-profasi-excluded-volume-cached-debug arg (=0)        Debug level
  --energy2-profasi-excluded-volume-cached-weight arg (=1.67857) Weight used when summing energy terms

profasi-excluded-volume-local: Profasi local excluded volume energy term (energy2):
  --energy2-profasi-excluded-volume-local [=arg(= )]            Activate energy2-profasi-excluded-volume-local [number of occurrences]
  --energy2-profasi-excluded-volume-local-debug arg (=0)        Debug level
  --energy2-profasi-excluded-volume-local-weight arg (=1.67857) Weight used when summing energy terms

profasi-excluded-volume-local-cached: Profasi local excluded volume energy term - cached version(energy2):
  --energy2-profasi-excluded-volume-local-cached [=arg(= )]            Activate energy2-profasi-excluded-volume-local-cached [number of occurrences]
  --energy2-profasi-excluded-volume-local-cached-debug arg (=0)        Debug level
  --energy2-profasi-excluded-volume-local-cached-weight arg (=1.67857) Weight used when summing energy terms

profasi-hydrogen-bond: Profasi hydrogen bond term (energy2):
  --energy2-profasi-hydrogen-bond [=arg(= )]                   Activate energy2-profasi-hydrogen-bond [number of occurrences]
  --energy2-profasi-hydrogen-bond-debug arg (=0)               Debug level
  --energy2-profasi-hydrogen-bond-weight arg (=1.67857)        Weight used when summing energy terms
  --energy2-profasi-hydrogen-bond-use-ideal-distances arg (=1) Whether to use ideal distance for C-O and H-N.

profasi-hydrogen-bond-cached: Profasi hydrogen bond term - cached version(energy2):
  --energy2-profasi-hydrogen-bond-cached [=arg(= )]                   Activate energy2-profasi-hydrogen-bond-cached [number of occurrences]
  --energy2-profasi-hydrogen-bond-cached-debug arg (=0)               Debug level
  --energy2-profasi-hydrogen-bond-cached-weight arg (=1.67857)        Weight used when summing energy terms
  --energy2-profasi-hydrogen-bond-cached-use-ideal-distances arg (=1) Whether to use ideal distance for C-O and H-N.

profasi-hydrogen-bond-improved: Profasi hydrogen bond term - improved version(energy2):
  --energy2-profasi-hydrogen-bond-improved [=arg(= )]                   Activate energy2-profasi-hydrogen-bond-improved [number of occurrences]
  --energy2-profasi-hydrogen-bond-improved-debug arg (=0)               Debug level
  --energy2-profasi-hydrogen-bond-improved-weight arg (=1.67857)        Weight used when summing energy terms
  --energy2-profasi-hydrogen-bond-improved-use-ideal-distances arg (=1) Whether to use ideal distance for C-O and H-N.

profasi-hydrophobicity: Profasi hydrophobicity term (energy2):
  --energy2-profasi-hydrophobicity [=arg(= )]            Activate energy2-profasi-hydrophobicity [number of occurrences]
  --energy2-profasi-hydrophobicity-debug arg (=0)        Debug level
  --energy2-profasi-hydrophobicity-weight arg (=1.67857) Weight used when summing energy terms

profasi-hydrophobicity: Profasi hydrophobicity term - cached version(energy2):
  --energy2-profasi-hydrophobicity-cached [=arg(= )]            Activate energy2-profasi-hydrophobicity-cached [number of occurrences]
  --energy2-profasi-hydrophobicity-cached-debug arg (=0)        Debug level
  --energy2-profasi-hydrophobicity-cached-weight arg (=1.67857) Weight used when summing energy terms

profasi-hydrophobicity: Profasi hydrophobicity term - improved version(energy2):
  --energy2-profasi-hydrophobicity-improved [=arg(= )]            Activate energy2-profasi-hydrophobicity-improved [number of occurrences]
  --energy2-profasi-hydrophobicity-improved-debug arg (=0)        Debug level
  --energy2-profasi-hydrophobicity-improved-weight arg (=1.67857) Weight used when summing energy terms

profasi-sidechain-charge: Profasi sidechain charge term (energy2):
  --energy2-profasi-sidechain-charge [=arg(= )]            Activate energy2-profasi-sidechain-charge [number of occurrences]
  --energy2-profasi-sidechain-charge-debug arg (=0)        Debug level
  --energy2-profasi-sidechain-charge-weight arg (=1.67857) Weight used when summing energy terms

profasi-sidechain-charge: Profasi sidechain charge term - cached version(energy2):
  --energy2-profasi-sidechain-charge-cached [=arg(= )]            Activate energy2-profasi-sidechain-charge-cached [number of occurrences]
  --energy2-profasi-sidechain-charge-cached-debug arg (=0)        Debug level
  --energy2-profasi-sidechain-charge-cached-weight arg (=1.67857) Weight used when summing energy terms

profasi-sidechain-charge: Profasi sidechain charge term - improved version(energy2):
  --energy2-profasi-sidechain-charge-improved [=arg(= )]            Activate energy2-profasi-sidechain-charge-improved [number of occurrences]
  --energy2-profasi-sidechain-charge-improved-debug arg (=0)        Debug level
  --energy2-profasi-sidechain-charge-improved-weight arg (=1.67857) Weight used when summing energy terms

profasi-proline-phi-torsion: Profasi proline phi torsion term(energy2):
  --energy2-profasi-proline-phi-torsion [=arg(= )]            Activate energy2-profasi-proline-phi-torsion [number of occurrences]
  --energy2-profasi-proline-phi-torsion-debug arg (=0)        Debug level
  --energy2-profasi-proline-phi-torsion-weight arg (=1.67857) Weight used when summing energy terms

saxs-debye (energy2):
  --energy2-saxs-debye [=arg(= )]                     Activate energy2-saxs-debye [number of occurrences]
  --energy2-saxs-debye-debug arg (=0)                 Debug level
  --energy2-saxs-debye-weight arg (=1)                Weight used when summing energy terms
  --energy2-saxs-debye-saxs-intensities-filename arg  path to file containing SAXS intensities
  --energy2-saxs-debye-saxs-form-factors-filename arg path to file containing SAXS form factors
  --energy2-saxs-debye-exp-errors-alpha arg (=0.15)   alpha parameter for experimental error term
  --energy2-saxs-debye-exp-errors-beta arg (=0.3)     beta parameter for experimental error term
  --energy2-saxs-debye-q-bins arg (=51)               number of q-bins used in the curve calculation
  --energy2-saxs-debye-q-bins-first arg (=0)          energy evaluation starts at this q-bin (default: 0). the first bin is used for normalization
  --energy2-saxs-debye-one-body-model arg (=0)        use one-body instead of two-body form factor model
  --energy2-saxs-debye-use-sine-lookup-table arg (=1) use sin() lookup table instead of the full trigonometric evaluation

Basilisk explicit energy function (energy2):
  --energy2-basilisk [=arg(= )]                                                            Activate energy2-basilisk [number of occurrences]
  --energy2-basilisk-debug arg (=0)                                                        Debug level
  --energy2-basilisk-weight arg (=1)                                                       Weight used when summing energy terms
  --energy2-basilisk-mocapy-dbn-dir arg (=/home/subhodeep/local/phaistos/data/mocapy_dbns) Path to mocapy model file directory.
  --energy2-basilisk-model-filename arg (=basilisk.dbn)                                    Model filename
  --energy2-basilisk-use-cache arg (=1)                                                    Use the cached version of the term (should be faster)
  --energy2-basilisk-ignore-bb arg (=0)                                                    Use the backbone independent version instead
  --energy2-basilisk-eliminate-move-bias arg (=0)                                          Divide out the move-bias of the corresponding moves. 
                                                                                           Equivalent to (but faster than) setting implicit-energy to
                                                                                           false.

Compas explicit energy function (energy2):
  --energy2-compas [=arg(= )]                                                            Activate energy2-compas [number of occurrences]
  --energy2-compas-debug arg (=0)                                                        Debug level
  --energy2-compas-weight arg (=1)                                                       Weight used when summing energy terms
  --energy2-compas-mocapy-dbn-dir arg (=/home/subhodeep/local/phaistos/data/mocapy_dbns) Path to mocapy model file directory.
  --energy2-compas-model-filename arg (=compas.dbn)                                      Model filename
  --energy2-compas-use-cache arg (=1)                                                    Use the cached version of the term (should be faster)
  --energy2-compas-ignore-bb arg (=0)                                                    Use the backbone independent version instead
  --energy2-compas-eliminate-move-bias arg (=0)                                          Divide out the move-bias of the corresponding moves. 
                                                                                         Equivalent to (but faster than) setting implicit-energy to 
                                                                                         false.

Constrain distances in a protein like HBond networks, C alpha contacts or disulfide bonds (energy2):
  --energy2-constrain-distances [=arg(= )]                            Activate energy2-constrain-distances [number of occurrences]
  --energy2-constrain-distances-debug arg (=0)                        Debug level
  --energy2-constrain-distances-weight arg (=1)                       Weight used when summing energy terms
  --energy2-constrain-distances-network-filename arg                  Restore network from a file.
  --energy2-constrain-distances-pdb-file arg                          Path to PDB input file.
  --energy2-constrain-distances-include-bb-hbond arg (=1)             Include backbone-backbone hydrogen bonds in the network
  --energy2-constrain-distances-include-sc-hbond arg (=1)             Include sidechain-sidechain hydrogen bonds in the network
  --energy2-constrain-distances-include-bb-sc-hbond arg (=1)          Include backbone-sidechain hydrogen bonds in the network
  --energy2-constrain-distances-include-ca-contacts arg (=1)          Include CA-CA contacts in the network
  --energy2-constrain-distances-include-fixed-point-contacts arg (=0) Include contacts between atoms and fixed points in space
  --energy2-constrain-distances-include-ss-bond arg (=1)              Include disulfide bonds (SS bonds) in the network
  --energy2-constrain-distances-init-hbond-from-native arg (=0)       Whether to initialize ideal hbond distances from PDB file (rather than averages
                                                                      from the Top500 database)
  --energy2-constrain-distances-prune-network arg (=6)                Whether to prune/optimize the hbond network
  --energy2-constrain-distances-dehydron-bb-cutoff arg (=14)          Cutoff below which backbone-backbone hydrogen bonds are considered as 
                                                                      dehydrated aka weak/broken
  --energy2-constrain-distances-dehydron-bb-sc-cutoff arg (=9)        Cutoff below which backbone-sidechain hydrogen bonds are considered as 
                                                                      dehydrated aka weak/broken
  --energy2-constrain-distances-dehydron-sc-cutoff arg (=7)           Cutoff below which sidechain-sidechain hydrogen bonds are considered as 
                                                                      dehydrated aka weak/broken
  --energy2-constrain-distances-ca-distance arg (=6)                  Cutoff distance in Angstrom to be considered a Calpha contact
  --energy2-constrain-distances-ss-distance arg (=3)                  Cutoff distance in Angstrom to be considered a disulfide contact
  --energy2-constrain-distances-ca-skip arg (=5)                      How many residues to skip along the chain before considering a Calpha contact
  --energy2-constrain-distances-bb-hbond-skip arg (=1)                How many residues to skip along the chain before considering a 
                                                                      backbone-backbone hydrogen bond contact
  --energy2-constrain-distances-sc-hbond-skip arg (=1)                How many residues to skip along the chain before considering a 
                                                                      sidechain-sidechain hydrogen bond contact
  --energy2-constrain-distances-bb-sc-hbond-skip arg (=1)             How many residues to skip along the chain before considering a 
                                                                      backbone-sidechain hydrogen bond contact
  --energy2-constrain-distances-ss-skip arg (=1)                      How many residues to skip along the chain before considering a disulfide 
                                                                      contact
  --energy2-constrain-distances-generate-pymol arg (=0)               Whether to generate a Python script that will visualize the network in PyMOL
  --energy2-constrain-distances-use-caching (recommended) arg (=1)    Whether to cache interations
  --energy2-constrain-distances-verbose arg (=0)                      Whether to print out additional information (recommended)

Lock disulfide bonds found in proteins in place (energy2):
  --energy2-constrain-disulfide-bonds [=arg(= )]                         Activate energy2-constrain-disulfide-bonds [number of occurrences]
  --energy2-constrain-disulfide-bonds-debug arg (=0)                     Debug level
  --energy2-constrain-disulfide-bonds-weight arg (=1)                    Weight used when summing energy terms
  --energy2-constrain-disulfide-bonds-network-filename arg               Restore network from a file.
  --energy2-constrain-disulfide-bonds-include-ss-bond arg (=1)           Include disulfide bonds (SS bonds) in the network
  --energy2-constrain-disulfide-bonds-ss-distance arg (=3)               Default CYS(SG)-CYS(SG) cutoff distance.
  --energy2-constrain-disulfide-bonds-ss-skip arg (=1)                   Default minimum CYS-CYS distance in the chain.
  --energy2-constrain-disulfide-bonds-generate-pymol arg (=0)            Whether to generate a Python script that will visualize the network in PyMOL
  --energy2-constrain-disulfide-bonds-use-caching (recommended) arg (=1) Whether to cache interations
  --energy2-constrain-disulfide-bonds-verbose arg (=0)                   Whether to print out additional information (recommended)

Visible Volume AA (energy2):
  --energy2-visible-volume [=arg(= )]                    Activate energy2-visible-volume [number of occurrences]
  --energy2-visible-volume-debug arg (=0)                Debug level
  --energy2-visible-volume-weight arg (=1)               Weight used when summing energy terms
  --energy2-visible-volume-sphere-radius arg (=11)       Max distance to neighbors considered (angstroms)
  --energy2-visible-volume-min-sphere-points arg (=1000) Minimum number of discrete angle points in model
  --energy2-visible-volume-atom-radius arg (=1.8)        Disk radius of atom neighbors (angstroms)
  --energy2-visible-volume-volume arg (=1)               Calculate visible volume (observable only)
  --energy2-visible-volume-angexp arg (=0)               Calculate angular exposure (relative residue SASA analog, observable only)
  --energy2-visible-volume-fscn arg (=0)                 Calculate first shell coordination number (observable only)
  --energy2-visible-volume-fscn-threshold arg (=35)      Minimum number of angle points to define contact (observable only)

backbone-dbn: Backbone DBN energy term (energy2):
  --energy2-backbone-dbn [=arg(= )]                   Activate energy2-backbone-dbn [number of occurrences]
  --energy2-backbone-dbn-debug arg (=0)               Debug level
  --energy2-backbone-dbn-weight arg (=1)              Weight used when summing energy terms
  --energy2-backbone-dbn-enable-dbn-update arg (=1)   Whether to update the angles in the DBN from the chain when necessary.
  --energy2-backbone-dbn-always-full-update arg (=0)  Whether to always force update of all angles in the DBN from the chain.
  --energy2-backbone-dbn-window-size arg (=-1)        Size of window used when calculating the energy. A good value for the window size is >7, and a 
                                                      negative window size means that the full bias is used.
  --energy2-backbone-dbn-eliminate-move-bias arg (=0) Divide out the move-bias of the corresponding moves. Equivalent to (but faster than) setting 
                                                      implicit-energy to false.


############################
#### OBSERVABLE OPTIONS ####
############################

none - empty energy term (observable):
  --observable-none [=arg(= )] Activate observable-none

Sum of all energy terms (for inclusion as observable):
  --observable-@energy-sum [=arg(= )]                                 Activate observable-@energy-sum [number of occurrences]
  --observable-@energy-sum-debug arg (=0)                             Debug level
  --observable-@energy-sum-weight arg (=1)                            Weight used when summing energy terms
  --observable-@energy-sum-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-@energy-sum-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-@energy-sum-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information to
                                                                      header in dumped pdb files; "pdb-b-factor":output information to b-factors in 
                                                                      dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other
                                                                      string is interpreted as a filename for a separate logfile.
  --observable-@energy-sum-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                      whenever an observable is active (i.e. iteration number matches 
                                                                      register-interval)

Refer to energy terms in main energy:
  --observable-@energy-terms [=arg(= )]                                 Activate observable-@energy-terms [number of occurrences]
  --observable-@energy-terms-debug arg (=0)                             Debug level
  --observable-@energy-terms-weight arg (=1)                            Weight used when summing energy terms
  --observable-@energy-terms-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-@energy-terms-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-@energy-terms-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information 
                                                                        to header in dumped pdb files; "pdb-b-factor":output information to b-factors
                                                                        in dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any 
                                                                        other string is interpreted as a filename for a separate logfile.
  --observable-@energy-terms-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                        whenever an observable is active (i.e. iteration number matches 
                                                                        register-interval)

Clash-fast (observable):
  --observable-clash-fast [=arg(= )]                                 Activate observable-clash-fast [number of occurrences]
  --observable-clash-fast-debug arg (=0)                             Debug level
  --observable-clash-fast-weight arg (=1)                            Weight used when summing energy terms
  --observable-clash-fast-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-clash-fast-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-clash-fast-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information to 
                                                                     header in dumped pdb files; "pdb-b-factor":output information to b-factors in 
                                                                     dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other 
                                                                     string is interpreted as a filename for a separate logfile.
  --observable-clash-fast-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                     whenever an observable is active (i.e. iteration number matches 
                                                                     register-interval)
  --observable-clash-fast-only-modified-pairs arg (=1)               Specifies whether energy should consider only pairs modified by the last move. 
                                                                     If a clashfree structure is maintained at all times, this is sufficient to 
                                                                     detect all clashes
  --observable-clash-fast-boolean-mode arg (=1)                      Specifies whether energy should work in clash/non-clash mode and return 
                                                                     infinity/0 (true) or count all the clashes and return the number of clashes 
                                                                     (false)
  --observable-clash-fast-minimum-residue-distance arg (=2)          Minimum distance along chain (measured in number of residues) before pair is 
                                                                     taken into account by the energy
  --observable-clash-fast-clash-distance-h arg (=1.5)                Distance within which pairs of hydrogens are considered to be clashing (in 
                                                                     angstrom)
  --observable-clash-fast-clash-distance-no arg (=2.3)               Distance within which pairs of Nitrogen-Oxygen pairs are considered to be 
                                                                     clashing (in angstrom)
  --observable-clash-fast-clash-distance-ps arg (=1.9)               Distance within which pairs of pseudo-sidechain atom pairs are considered to be 
                                                                     clashing (in angstrom)
  --observable-clash-fast-clash-distance-sg arg (=1.8)               Distance within which pairs of SG atom pairs are considered to be clashing (in 
                                                                     angstrom)
  --observable-clash-fast-clash-distance-any-pair arg (=2.3)         Default distance within which pairs of atom pairs of all other types are 
                                                                     considered to be clashing (in angstrom)

rg: Radius of gyration (observable):
  --observable-rg [=arg(= )]                                 Activate observable-rg [number of occurrences]
  --observable-rg-debug arg (=0)                             Debug level
  --observable-rg-weight arg (=1)                            Weight used when summing energy terms
  --observable-rg-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-rg-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-rg-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information to header 
                                                             in dumped pdb files; "pdb-b-factor":output information to b-factors in dumped pdb files;
                                                             "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other string is interpreted as a
                                                             filename for a separate logfile.
  --observable-rg-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read whenever an 
                                                             observable is active (i.e. iteration number matches register-interval)

rmsd: Root mean square deviation (observable):
  --observable-rmsd [=arg(= )]                                 Activate observable-rmsd [number of occurrences]
  --observable-rmsd-debug arg (=0)                             Debug level
  --observable-rmsd-weight arg (=1)                            Weight used when summing energy terms
  --observable-rmsd-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-rmsd-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-rmsd-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information to header
                                                               in dumped pdb files; "pdb-b-factor":output information to b-factors in dumped pdb 
                                                               files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other string is 
                                                               interpreted as a filename for a separate logfile.
  --observable-rmsd-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read whenever an 
                                                               observable is active (i.e. iteration number matches register-interval)
  --observable-rmsd-reference-pdb-file arg                     PDB containing reference structure.
  --observable-rmsd-ca-only arg (=1)                           Whether to only include C-alphas in the RMSD calculation.
  --observable-rmsd-residue-start arg (=0)                     Start residue.
  --observable-rmsd-residue-end arg (=-1)                      End residue.

contact-map (observable):
  --observable-contact-map [=arg(= )]                                 Activate observable-contact-map [number of occurrences]
  --observable-contact-map-debug arg (=0)                             Debug level
  --observable-contact-map-weight arg (=1)                            Weight used when summing energy terms
  --observable-contact-map-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-contact-map-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-contact-map-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information to
                                                                      header in dumped pdb files; "pdb-b-factor":output information to b-factors in 
                                                                      dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other
                                                                      string is interpreted as a filename for a separate logfile.
  --observable-contact-map-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                      whenever an observable is active (i.e. iteration number matches 
                                                                      register-interval)
  --observable-contact-map-contact-map-file arg                       path to contact map file
  --observable-contact-map-contact-map-string arg                     String containing contacts
  --observable-contact-map-pdb-file arg                               path to pdb file for constructing contact map
  --observable-contact-map-cutoff arg (=inf)                          contact cutoff distance when constructing map from pdb
  --observable-contact-map-minimum-residue-distance arg (=7)          Minimum separation between two residues before they are considered.
  --observable-contact-map-iteration-type arg (=ALL)                  Which atoms to include when constructing contactmap from chain
  --observable-contact-map-dist-squared arg (=0)                      set contact energy ~ (r-r0)^2/width (default: exp(-(r-r0)^2/width)
  --observable-contact-map-potential-width arg (=1)                   Width of energy potential
  --observable-contact-map-verbose arg (=0)                           Whether to output contact map in verbose mode
  --observable-contact-map-average-mode arg (=0)                      Whether to report contact map averages
  --observable-contact-map-persistency-cutoff arg (=0)                In average mode: only contacts with a frequency greater than this value are 
                                                                      reported 
  --observable-contact-map-counts-as-weights arg (=0)                 In average mode: whether to use the occurence-counts as weights

q-factor: percentage of native contacts in chain (observable):
  --observable-q-factor [=arg(= )]                                 Activate observable-q-factor [number of occurrences]
  --observable-q-factor-debug arg (=0)                             Debug level
  --observable-q-factor-weight arg (=1)                            Weight used when summing energy terms
  --observable-q-factor-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-q-factor-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-q-factor-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information to 
                                                                   header in dumped pdb files; "pdb-b-factor":output information to b-factors in 
                                                                   dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other 
                                                                   string is interpreted as a filename for a separate logfile.
  --observable-q-factor-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read whenever 
                                                                   an observable is active (i.e. iteration number matches register-interval)
  --observable-q-factor-contact-map-file arg                       path to contact map file
  --observable-q-factor-contact-map-string arg                     String containing contacts
  --observable-q-factor-pdb-file arg                               path to pdb file for constructing contact map
  --observable-q-factor-cutoff arg (=inf)                          contact cutoff distance when constructing map from pdb
  --observable-q-factor-minimum-residue-distance arg (=7)          Minimum separation between two residues before they are considered.
  --observable-q-factor-iteration-type arg (=ALL)                  Which atoms to include when constructing contactmap from chain
  --observable-q-factor-use-weights arg (=0)                       Whether to use contact weights to calculate a weighted version of the q factor

helix-content: percentage of chain that is in a helical conformation (observable):
  --observable-helix-content [=arg(= )]                                 Activate observable-helix-content [number of occurrences]
  --observable-helix-content-debug arg (=0)                             Debug level
  --observable-helix-content-weight arg (=1)                            Weight used when summing energy terms
  --observable-helix-content-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-helix-content-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-helix-content-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information 
                                                                        to header in dumped pdb files; "pdb-b-factor":output information to b-factors
                                                                        in dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any 
                                                                        other string is interpreted as a filename for a separate logfile.
  --observable-helix-content-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                        whenever an observable is active (i.e. iteration number matches 
                                                                        register-interval)
  --observable-helix-content-min-angle1 arg (=-1.5708)                  Minimum boundary for angle1
  --observable-helix-content-max-angle1 arg (=-0.523599)                Maximum boundary for angle1
  --observable-helix-content-min-angle2 arg (=-1.3439)                  Minimum boundary for angle2
  --observable-helix-content-max-angle2 arg (=-0.296706)                Maximum boundary for angle2
  --observable-helix-content-per-residue arg (=0)                       Whether to split up observable into a per-residue vector

angle-histogram: statistics on angle distributions (observable):
  --observable-angle-histogram [=arg(= )]                                 Activate observable-angle-histogram [number of occurrences]
  --observable-angle-histogram-debug arg (=0)                             Debug level
  --observable-angle-histogram-weight arg (=1)                            Weight used when summing energy terms
  --observable-angle-histogram-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-angle-histogram-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-angle-histogram-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                          information to header in dumped pdb files; "pdb-b-factor":output 
                                                                          information to b-factors in dumped pdb files; "stdout|cout|stderr|cerr": 
                                                                          Output to stdout|stderr. Any other string is interpreted as a filename for 
                                                                          a separate logfile.
  --observable-angle-histogram-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                          whenever an observable is active (i.e. iteration number matches 
                                                                          register-interval)
  --observable-angle-histogram-bins arg (=128)                            Number of bins

angle: statistics on angle distributions (observable):
  --observable-angle [=arg(= )]                                 Activate observable-angle [number of occurrences]
  --observable-angle-debug arg (=0)                             Debug level
  --observable-angle-weight arg (=1)                            Weight used when summing energy terms
  --observable-angle-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-angle-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-angle-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information to 
                                                                header in dumped pdb files; "pdb-b-factor":output information to b-factors in dumped 
                                                                pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other string is 
                                                                interpreted as a filename for a separate logfile.
  --observable-angle-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read whenever an 
                                                                observable is active (i.e. iteration number matches register-interval)
  --observable-angle-dihedral-only arg (=1)                     Dump only the dihedral angels.

pdb: dump pdb file(s) (observable):
  --observable-pdb [=arg(= )]                                          Activate observable-pdb [number of occurrences]
  --observable-pdb-debug arg (=0)                                      Debug level
  --observable-pdb-weight arg (=1)                                     Weight used when summing energy terms
  --observable-pdb-register-interval arg (=5000)                       How often to register/calculate observable.
  --observable-pdb-register-burnin arg (=0)                            After how many iterations to start registering/calculating observable.
  --observable-pdb-output-target arg (=samples_%p_%t/sample_%i_%e.pdb) How/Where the observable should be reported ("pdb-header":output information 
                                                                       to header in dumped pdb files; "pdb-b-factor":output information to b-factors 
                                                                       in dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any 
                                                                       other string is interpreted as a filename for a separate logfile.
  --observable-pdb-output-interval arg (=1)                            How often to register/calculate observable. This value will only be read 
                                                                       whenever an observable is active (i.e. iteration number matches 
                                                                       register-interval)
  --observable-pdb-minimum-energy-mode arg (=0)                        Whether only to dump minimum energy structures
  --observable-pdb-minimum-energy-fraction arg (=0.1)                  How far from the minimum energy a structure must be before being dumped
  --observable-pdb-minimum-energy-interval arg (=500)                  Minimum interval between dumped minimum energy structures

git: Dump git vectors (observable):
  --observable-git [=arg(= )]                                             Activate observable-git [number of occurrences]
  --observable-git-debug arg (=0)                                         Debug level
  --observable-git-weight arg (=1)                                        Weight used when summing energy terms
  --observable-git-register-interval arg (=5000)                          How often to register/calculate observable.
  --observable-git-register-burnin arg (=0)                               After how many iterations to start registering/calculating observable.
  --observable-git-output-target arg (=samples_%p_%t/sample_%i_%e.gitvec) How/Where the observable should be reported ("pdb-header":output 
                                                                          information to header in dumped pdb files; "pdb-b-factor":output 
                                                                          information to b-factors in dumped pdb files; "stdout|cout|stderr|cerr": 
                                                                          Output to stdout|stderr. Any other string is interpreted as a filename for 
                                                                          a separate logfile.
  --observable-git-output-interval arg (=1)                               How often to register/calculate observable. This value will only be read 
                                                                          whenever an observable is active (i.e. iteration number matches 
                                                                          register-interval)

Multibody multinomial (MuMu) model (observable):
  --observable-mumu [=arg(= )]                                                            Activate observable-mumu [number of occurrences]
  --observable-mumu-debug arg (=0)                                                        Debug level
  --observable-mumu-weight arg (=1)                                                       Weight used when summing energy terms
  --observable-mumu-register-interval arg (=5000)                                         How often to register/calculate observable.
  --observable-mumu-register-burnin arg (=0)                                              After how many iterations to start registering/calculating 
                                                                                          observable.
  --observable-mumu-output-target arg (=observables_%p_%t.dat)                            How/Where the observable should be reported 
                                                                                          ("pdb-header":output information to header in dumped pdb 
                                                                                          files; "pdb-b-factor":output information to b-factors in 
                                                                                          dumped pdb files; "stdout|cout|stderr|cerr": Output to 
                                                                                          stdout|stderr. Any other string is interpreted as a 
                                                                                          filename for a separate logfile.
  --observable-mumu-output-interval arg (=1)                                              How often to register/calculate observable. This value will
                                                                                          only be read whenever an observable is active (i.e. 
                                                                                          iteration number matches register-interval)
  --observable-mumu-mocapy-dbn-dir arg (=/home/subhodeep/local/phaistos/data/mocapy_dbns) Path to mocapy model file directory.
  --observable-mumu-model-filename arg (=default)                                         Model filename
  --observable-mumu-reference-model-filename arg (=default)                               Reference model filename
  --observable-mumu-use-ratio arg (=0)                                                    Use the ration method

opls-charge: OPLS charge term (observable):
  --observable-opls-charge [=arg(= )]                                 Activate observable-opls-charge [number of occurrences]
  --observable-opls-charge-debug arg (=0)                             Debug level
  --observable-opls-charge-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-opls-charge-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-opls-charge-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-opls-charge-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information to
                                                                      header in dumped pdb files; "pdb-b-factor":output information to b-factors in 
                                                                      dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other
                                                                      string is interpreted as a filename for a separate logfile.
  --observable-opls-charge-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                      whenever an observable is active (i.e. iteration number matches 
                                                                      register-interval)

opls-charge-cached: OPLS charge term - cached version (observable):
  --observable-opls-charge-cached [=arg(= )]                                 Activate observable-opls-charge-cached [number of occurrences]
  --observable-opls-charge-cached-debug arg (=0)                             Debug level
  --observable-opls-charge-cached-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-opls-charge-cached-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-opls-charge-cached-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-opls-charge-cached-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                             information to header in dumped pdb files; "pdb-b-factor":output 
                                                                             information to b-factors in dumped pdb files; "stdout|cout|stderr|cerr":
                                                                             Output to stdout|stderr. Any other string is interpreted as a filename 
                                                                             for a separate logfile.
  --observable-opls-charge-cached-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read
                                                                             whenever an observable is active (i.e. iteration number matches 
                                                                             register-interval)
  --observable-opls-charge-cached-cutoff-distance arg (=inf)                 Distance beyond which contributions are set to zero.

opls-vdw: OPLS van der Waals term (observable):
  --observable-opls-vdw [=arg(= )]                                 Activate observable-opls-vdw [number of occurrences]
  --observable-opls-vdw-debug arg (=0)                             Debug level
  --observable-opls-vdw-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-opls-vdw-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-opls-vdw-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-opls-vdw-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information to 
                                                                   header in dumped pdb files; "pdb-b-factor":output information to b-factors in 
                                                                   dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other 
                                                                   string is interpreted as a filename for a separate logfile.
  --observable-opls-vdw-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read whenever 
                                                                   an observable is active (i.e. iteration number matches register-interval)

opls-vdw-cached: OPLS van der Waals term - cached version (observable):
  --observable-opls-vdw-cached [=arg(= )]                                 Activate observable-opls-vdw-cached [number of occurrences]
  --observable-opls-vdw-cached-debug arg (=0)                             Debug level
  --observable-opls-vdw-cached-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-opls-vdw-cached-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-opls-vdw-cached-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-opls-vdw-cached-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                          information to header in dumped pdb files; "pdb-b-factor":output 
                                                                          information to b-factors in dumped pdb files; "stdout|cout|stderr|cerr": 
                                                                          Output to stdout|stderr. Any other string is interpreted as a filename for 
                                                                          a separate logfile.
  --observable-opls-vdw-cached-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                          whenever an observable is active (i.e. iteration number matches 
                                                                          register-interval)
  --observable-opls-vdw-cached-cutoff-distance arg (=inf)                 Distance beyond which contributions are set to zero.

opls-angle-bend: OPLS angle bend term (observable):
  --observable-opls-angle-bend [=arg(= )]                                 Activate observable-opls-angle-bend [number of occurrences]
  --observable-opls-angle-bend-debug arg (=0)                             Debug level
  --observable-opls-angle-bend-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-opls-angle-bend-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-opls-angle-bend-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-opls-angle-bend-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                          information to header in dumped pdb files; "pdb-b-factor":output 
                                                                          information to b-factors in dumped pdb files; "stdout|cout|stderr|cerr": 
                                                                          Output to stdout|stderr. Any other string is interpreted as a filename for 
                                                                          a separate logfile.
  --observable-opls-angle-bend-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                          whenever an observable is active (i.e. iteration number matches 
                                                                          register-interval)
  --observable-opls-angle-bend-omit-sidechains arg (=0)                   Exclude sidechain interactions

opls-angle-bend-cached: OPLS angle bend term - cached version (observable):
  --observable-opls-angle-bend-cached [=arg(= )]                                 Activate observable-opls-angle-bend-cached [number of occurrences]
  --observable-opls-angle-bend-cached-debug arg (=0)                             Debug level
  --observable-opls-angle-bend-cached-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-opls-angle-bend-cached-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-opls-angle-bend-cached-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                 observable.
  --observable-opls-angle-bend-cached-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                                 information to header in dumped pdb files; "pdb-b-factor":output 
                                                                                 information to b-factors in dumped pdb files; 
                                                                                 "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other string
                                                                                 is interpreted as a filename for a separate logfile.
  --observable-opls-angle-bend-cached-output-interval arg (=1)                   How often to register/calculate observable. This value will only be 
                                                                                 read whenever an observable is active (i.e. iteration number matches
                                                                                 register-interval)
  --observable-opls-angle-bend-cached-omit-sidechains arg (=0)                   Exclude sidechain interactions

opls-torsion: OPLS torsion term (observable):
  --observable-opls-torsion [=arg(= )]                                 Activate observable-opls-torsion [number of occurrences]
  --observable-opls-torsion-debug arg (=0)                             Debug level
  --observable-opls-torsion-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-opls-torsion-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-opls-torsion-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-opls-torsion-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information 
                                                                       to header in dumped pdb files; "pdb-b-factor":output information to b-factors 
                                                                       in dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any 
                                                                       other string is interpreted as a filename for a separate logfile.
  --observable-opls-torsion-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                       whenever an observable is active (i.e. iteration number matches 
                                                                       register-interval)

opls-improper-torsion: OPLS improper-torsion term (observable):
  --observable-opls-improper-torsion [=arg(= )]                                 Activate observable-opls-improper-torsion [number of occurrences]
  --observable-opls-improper-torsion-debug arg (=0)                             Debug level
  --observable-opls-improper-torsion-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-opls-improper-torsion-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-opls-improper-torsion-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                observable.
  --observable-opls-improper-torsion-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                                information to header in dumped pdb files; "pdb-b-factor":output 
                                                                                information to b-factors in dumped pdb files; 
                                                                                "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other string 
                                                                                is interpreted as a filename for a separate logfile.
  --observable-opls-improper-torsion-output-interval arg (=1)                   How often to register/calculate observable. This value will only be 
                                                                                read whenever an observable is active (i.e. iteration number matches 
                                                                                register-interval)

opls-bond-stretch: OPLS bond-stretch term (observable):
  --observable-opls-bond-stretch [=arg(= )]                                 Activate observable-opls-bond-stretch [number of occurrences]
  --observable-opls-bond-stretch-debug arg (=0)                             Debug level
  --observable-opls-bond-stretch-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-opls-bond-stretch-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-opls-bond-stretch-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-opls-bond-stretch-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                            information to header in dumped pdb files; "pdb-b-factor":output 
                                                                            information to b-factors in dumped pdb files; "stdout|cout|stderr|cerr": 
                                                                            Output to stdout|stderr. Any other string is interpreted as a filename 
                                                                            for a separate logfile.
  --observable-opls-bond-stretch-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                            whenever an observable is active (i.e. iteration number matches 
                                                                            register-interval)

opls-non-bonded: gbsa, vdw and charge terms (observable):
  --observable-opls-non-bonded [=arg(= )]                                 Activate observable-opls-non-bonded [number of occurrences]
  --observable-opls-non-bonded-debug arg (=0)                             Debug level
  --observable-opls-non-bonded-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-opls-non-bonded-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-opls-non-bonded-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-opls-non-bonded-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                          information to header in dumped pdb files; "pdb-b-factor":output 
                                                                          information to b-factors in dumped pdb files; "stdout|cout|stderr|cerr": 
                                                                          Output to stdout|stderr. Any other string is interpreted as a filename for 
                                                                          a separate logfile.
  --observable-opls-non-bonded-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                          whenever an observable is active (i.e. iteration number matches 
                                                                          register-interval)

opls-non-bonded-cached: gbsa, vdw and charge terms - cached version (observable):
  --observable-opls-non-bonded-cached [=arg(= )]                                 Activate observable-opls-non-bonded-cached [number of occurrences]
  --observable-opls-non-bonded-cached-debug arg (=0)                             Debug level
  --observable-opls-non-bonded-cached-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-opls-non-bonded-cached-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-opls-non-bonded-cached-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                 observable.
  --observable-opls-non-bonded-cached-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                                 information to header in dumped pdb files; "pdb-b-factor":output 
                                                                                 information to b-factors in dumped pdb files; 
                                                                                 "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other string
                                                                                 is interpreted as a filename for a separate logfile.
  --observable-opls-non-bonded-cached-output-interval arg (=1)                   How often to register/calculate observable. This value will only be 
                                                                                 read whenever an observable is active (i.e. iteration number matches
                                                                                 register-interval)
  --observable-opls-non-bonded-cached-vdw-cutoff-distance arg (=inf)             Distance beyond which vdw contributions are set to zero.
  --observable-opls-non-bonded-cached-charge-cutoff-distance arg (=inf)          Distance beyond which charge contributions are set to zero.
  --observable-opls-non-bonded-cached-gbsa-maximum-deviation-cutoff arg (=0.1)   Maximum deviation allowed in born radii in two subtrees of the 
                                                                                 chaintree before it is recalculated
  --observable-opls-non-bonded-cached-gbsa-cutoff-distance-phase1 arg (=inf)     Distance beyond which gbsa contributions are set to zero in phase1.
  --observable-opls-non-bonded-cached-gbsa-cutoff-distance-phase2 arg (=inf)     Distance beyond which gbsa contributions are set to zero in phase2.

gbsa: GBSA implicit solvent term (observable):
  --observable-gbsa [=arg(= )]                                 Activate observable-gbsa [number of occurrences]
  --observable-gbsa-debug arg (=0)                             Debug level
  --observable-gbsa-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-gbsa-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-gbsa-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-gbsa-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information to header
                                                               in dumped pdb files; "pdb-b-factor":output information to b-factors in dumped pdb 
                                                               files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other string is 
                                                               interpreted as a filename for a separate logfile.
  --observable-gbsa-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read whenever an 
                                                               observable is active (i.e. iteration number matches register-interval)

gbsa-cached: GBSA implicit solvent term - cached version (observable):
  --observable-gbsa-cached [=arg(= )]                                 Activate observable-gbsa-cached [number of occurrences]
  --observable-gbsa-cached-debug arg (=0)                             Debug level
  --observable-gbsa-cached-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-gbsa-cached-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-gbsa-cached-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-gbsa-cached-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information to
                                                                      header in dumped pdb files; "pdb-b-factor":output information to b-factors in 
                                                                      dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other
                                                                      string is interpreted as a filename for a separate logfile.
  --observable-gbsa-cached-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                      whenever an observable is active (i.e. iteration number matches 
                                                                      register-interval)
  --observable-gbsa-cached-maximum-deviation-cutoff arg (=0.1)        Maximum deviation allowed in born radii in two subtrees of the chaintree before
                                                                      it is recalculated
  --observable-gbsa-cached-cutoff-distance-phase1 arg (=inf)          Distance beyond which contributions are set to zero in phase1.
  --observable-gbsa-cached-cutoff-distance-phase2 arg (=inf)          Distance beyond which contributions are set to zero in phase2.

profasi-local: Profasi local energy term (observable):
  --observable-profasi-local [=arg(= )]                                 Activate observable-profasi-local [number of occurrences]
  --observable-profasi-local-debug arg (=0)                             Debug level
  --observable-profasi-local-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-local-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-local-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-profasi-local-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information 
                                                                        to header in dumped pdb files; "pdb-b-factor":output information to b-factors
                                                                        in dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any 
                                                                        other string is interpreted as a filename for a separate logfile.
  --observable-profasi-local-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                        whenever an observable is active (i.e. iteration number matches 
                                                                        register-interval)

profasi-local-cached: Profasi local energy term - cached version(observable):
  --observable-profasi-local-cached [=arg(= )]                                 Activate observable-profasi-local-cached [number of occurrences]
  --observable-profasi-local-cached-debug arg (=0)                             Debug level
  --observable-profasi-local-cached-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-local-cached-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-local-cached-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-profasi-local-cached-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                               information to header in dumped pdb files; "pdb-b-factor":output 
                                                                               information to b-factors in dumped pdb files; 
                                                                               "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other string 
                                                                               is interpreted as a filename for a separate logfile.
  --observable-profasi-local-cached-output-interval arg (=1)                   How often to register/calculate observable. This value will only be 
                                                                               read whenever an observable is active (i.e. iteration number matches 
                                                                               register-interval)

profasi-local-sidechain: Profasi local sidechain energy term (observable):
  --observable-profasi-local-sidechain [=arg(= )]                                 Activate observable-profasi-local-sidechain [number of occurrences]
  --observable-profasi-local-sidechain-debug arg (=0)                             Debug level
  --observable-profasi-local-sidechain-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-local-sidechain-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-local-sidechain-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                  observable.
  --observable-profasi-local-sidechain-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                                  information to header in dumped pdb files; "pdb-b-factor":output 
                                                                                  information to b-factors in dumped pdb files; 
                                                                                  "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other 
                                                                                  string is interpreted as a filename for a separate logfile.
  --observable-profasi-local-sidechain-output-interval arg (=1)                   How often to register/calculate observable. This value will only be
                                                                                  read whenever an observable is active (i.e. iteration number 
                                                                                  matches register-interval)

profasi-local-sidechain-cached: Profasi local sidechain energy term - cached version(observable):
  --observable-profasi-local-sidechain-cached [=arg(= )]                                 Activate observable-profasi-local-sidechain-cached [number 
                                                                                         of occurrences]
  --observable-profasi-local-sidechain-cached-debug arg (=0)                             Debug level
  --observable-profasi-local-sidechain-cached-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-local-sidechain-cached-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-local-sidechain-cached-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                         observable.
  --observable-profasi-local-sidechain-cached-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported 
                                                                                         ("pdb-header":output information to header in dumped pdb 
                                                                                         files; "pdb-b-factor":output information to b-factors in 
                                                                                         dumped pdb files; "stdout|cout|stderr|cerr": Output to 
                                                                                         stdout|stderr. Any other string is interpreted as a filename
                                                                                         for a separate logfile.
  --observable-profasi-local-sidechain-cached-output-interval arg (=1)                   How often to register/calculate observable. This value will 
                                                                                         only be read whenever an observable is active (i.e. 
                                                                                         iteration number matches register-interval)

profasi-excluded-volume: Profasi excluded volume energy term (observable):
  --observable-profasi-excluded-volume [=arg(= )]                                 Activate observable-profasi-excluded-volume [number of occurrences]
  --observable-profasi-excluded-volume-debug arg (=0)                             Debug level
  --observable-profasi-excluded-volume-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-excluded-volume-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-excluded-volume-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                  observable.
  --observable-profasi-excluded-volume-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                                  information to header in dumped pdb files; "pdb-b-factor":output 
                                                                                  information to b-factors in dumped pdb files; 
                                                                                  "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other 
                                                                                  string is interpreted as a filename for a separate logfile.
  --observable-profasi-excluded-volume-output-interval arg (=1)                   How often to register/calculate observable. This value will only be
                                                                                  read whenever an observable is active (i.e. iteration number 
                                                                                  matches register-interval)

profasi-excluded-volume-cached: Profasi excluded volume energy term - cached version(observable):
  --observable-profasi-excluded-volume-cached [=arg(= )]                                 Activate observable-profasi-excluded-volume-cached [number 
                                                                                         of occurrences]
  --observable-profasi-excluded-volume-cached-debug arg (=0)                             Debug level
  --observable-profasi-excluded-volume-cached-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-excluded-volume-cached-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-excluded-volume-cached-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                         observable.
  --observable-profasi-excluded-volume-cached-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported 
                                                                                         ("pdb-header":output information to header in dumped pdb 
                                                                                         files; "pdb-b-factor":output information to b-factors in 
                                                                                         dumped pdb files; "stdout|cout|stderr|cerr": Output to 
                                                                                         stdout|stderr. Any other string is interpreted as a filename
                                                                                         for a separate logfile.
  --observable-profasi-excluded-volume-cached-output-interval arg (=1)                   How often to register/calculate observable. This value will 
                                                                                         only be read whenever an observable is active (i.e. 
                                                                                         iteration number matches register-interval)

profasi-excluded-volume-local: Profasi local excluded volume energy term (observable):
  --observable-profasi-excluded-volume-local [=arg(= )]                                 Activate observable-profasi-excluded-volume-local [number of 
                                                                                        occurrences]
  --observable-profasi-excluded-volume-local-debug arg (=0)                             Debug level
  --observable-profasi-excluded-volume-local-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-excluded-volume-local-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-excluded-volume-local-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                        observable.
  --observable-profasi-excluded-volume-local-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported 
                                                                                        ("pdb-header":output information to header in dumped pdb 
                                                                                        files; "pdb-b-factor":output information to b-factors in 
                                                                                        dumped pdb files; "stdout|cout|stderr|cerr": Output to 
                                                                                        stdout|stderr. Any other string is interpreted as a filename 
                                                                                        for a separate logfile.
  --observable-profasi-excluded-volume-local-output-interval arg (=1)                   How often to register/calculate observable. This value will 
                                                                                        only be read whenever an observable is active (i.e. iteration
                                                                                        number matches register-interval)

profasi-excluded-volume-local-cached: Profasi local excluded volume energy term - cached version(observable):
  --observable-profasi-excluded-volume-local-cached [=arg(= )]                                 Activate observable-profasi-excluded-volume-local-cach
                                                                                               ed [number of occurrences]
  --observable-profasi-excluded-volume-local-cached-debug arg (=0)                             Debug level
  --observable-profasi-excluded-volume-local-cached-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-excluded-volume-local-cached-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-excluded-volume-local-cached-register-burnin arg (=0)                   After how many iterations to start 
                                                                                               registering/calculating observable.
  --observable-profasi-excluded-volume-local-cached-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported 
                                                                                               ("pdb-header":output information to header in dumped 
                                                                                               pdb files; "pdb-b-factor":output information to 
                                                                                               b-factors in dumped pdb files; 
                                                                                               "stdout|cout|stderr|cerr": Output to stdout|stderr. 
                                                                                               Any other string is interpreted as a filename for a 
                                                                                               separate logfile.
  --observable-profasi-excluded-volume-local-cached-output-interval arg (=1)                   How often to register/calculate observable. This value
                                                                                               will only be read whenever an observable is active 
                                                                                               (i.e. iteration number matches register-interval)

profasi-hydrogen-bond: Profasi hydrogen bond term (observable):
  --observable-profasi-hydrogen-bond [=arg(= )]                                 Activate observable-profasi-hydrogen-bond [number of occurrences]
  --observable-profasi-hydrogen-bond-debug arg (=0)                             Debug level
  --observable-profasi-hydrogen-bond-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-hydrogen-bond-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-hydrogen-bond-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                observable.
  --observable-profasi-hydrogen-bond-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                                information to header in dumped pdb files; "pdb-b-factor":output 
                                                                                information to b-factors in dumped pdb files; 
                                                                                "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other string 
                                                                                is interpreted as a filename for a separate logfile.
  --observable-profasi-hydrogen-bond-output-interval arg (=1)                   How often to register/calculate observable. This value will only be 
                                                                                read whenever an observable is active (i.e. iteration number matches 
                                                                                register-interval)
  --observable-profasi-hydrogen-bond-use-ideal-distances arg (=1)               Whether to use ideal distance for C-O and H-N.

profasi-hydrogen-bond-cached: Profasi hydrogen bond term - cached version(observable):
  --observable-profasi-hydrogen-bond-cached [=arg(= )]                                 Activate observable-profasi-hydrogen-bond-cached [number of 
                                                                                       occurrences]
  --observable-profasi-hydrogen-bond-cached-debug arg (=0)                             Debug level
  --observable-profasi-hydrogen-bond-cached-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-hydrogen-bond-cached-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-hydrogen-bond-cached-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                       observable.
  --observable-profasi-hydrogen-bond-cached-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported 
                                                                                       ("pdb-header":output information to header in dumped pdb 
                                                                                       files; "pdb-b-factor":output information to b-factors in 
                                                                                       dumped pdb files; "stdout|cout|stderr|cerr": Output to 
                                                                                       stdout|stderr. Any other string is interpreted as a filename 
                                                                                       for a separate logfile.
  --observable-profasi-hydrogen-bond-cached-output-interval arg (=1)                   How often to register/calculate observable. This value will 
                                                                                       only be read whenever an observable is active (i.e. iteration 
                                                                                       number matches register-interval)
  --observable-profasi-hydrogen-bond-cached-use-ideal-distances arg (=1)               Whether to use ideal distance for C-O and H-N.

profasi-hydrogen-bond-improved: Profasi hydrogen bond term - improved version(observable):
  --observable-profasi-hydrogen-bond-improved [=arg(= )]                                 Activate observable-profasi-hydrogen-bond-improved [number 
                                                                                         of occurrences]
  --observable-profasi-hydrogen-bond-improved-debug arg (=0)                             Debug level
  --observable-profasi-hydrogen-bond-improved-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-hydrogen-bond-improved-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-hydrogen-bond-improved-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                         observable.
  --observable-profasi-hydrogen-bond-improved-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported 
                                                                                         ("pdb-header":output information to header in dumped pdb 
                                                                                         files; "pdb-b-factor":output information to b-factors in 
                                                                                         dumped pdb files; "stdout|cout|stderr|cerr": Output to 
                                                                                         stdout|stderr. Any other string is interpreted as a filename
                                                                                         for a separate logfile.
  --observable-profasi-hydrogen-bond-improved-output-interval arg (=1)                   How often to register/calculate observable. This value will 
                                                                                         only be read whenever an observable is active (i.e. 
                                                                                         iteration number matches register-interval)
  --observable-profasi-hydrogen-bond-improved-use-ideal-distances arg (=1)               Whether to use ideal distance for C-O and H-N.

profasi-hydrophobicity: Profasi hydrophobicity term (observable):
  --observable-profasi-hydrophobicity [=arg(= )]                                 Activate observable-profasi-hydrophobicity [number of occurrences]
  --observable-profasi-hydrophobicity-debug arg (=0)                             Debug level
  --observable-profasi-hydrophobicity-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-hydrophobicity-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-hydrophobicity-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                 observable.
  --observable-profasi-hydrophobicity-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                                 information to header in dumped pdb files; "pdb-b-factor":output 
                                                                                 information to b-factors in dumped pdb files; 
                                                                                 "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other string
                                                                                 is interpreted as a filename for a separate logfile.
  --observable-profasi-hydrophobicity-output-interval arg (=1)                   How often to register/calculate observable. This value will only be 
                                                                                 read whenever an observable is active (i.e. iteration number matches
                                                                                 register-interval)

profasi-hydrophobicity: Profasi hydrophobicity term - cached version(observable):
  --observable-profasi-hydrophobicity-cached [=arg(= )]                                 Activate observable-profasi-hydrophobicity-cached [number of 
                                                                                        occurrences]
  --observable-profasi-hydrophobicity-cached-debug arg (=0)                             Debug level
  --observable-profasi-hydrophobicity-cached-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-hydrophobicity-cached-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-hydrophobicity-cached-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                        observable.
  --observable-profasi-hydrophobicity-cached-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported 
                                                                                        ("pdb-header":output information to header in dumped pdb 
                                                                                        files; "pdb-b-factor":output information to b-factors in 
                                                                                        dumped pdb files; "stdout|cout|stderr|cerr": Output to 
                                                                                        stdout|stderr. Any other string is interpreted as a filename 
                                                                                        for a separate logfile.
  --observable-profasi-hydrophobicity-cached-output-interval arg (=1)                   How often to register/calculate observable. This value will 
                                                                                        only be read whenever an observable is active (i.e. iteration
                                                                                        number matches register-interval)

profasi-hydrophobicity: Profasi hydrophobicity term - improved version(observable):
  --observable-profasi-hydrophobicity-improved [=arg(= )]                                 Activate observable-profasi-hydrophobicity-improved [number
                                                                                          of occurrences]
  --observable-profasi-hydrophobicity-improved-debug arg (=0)                             Debug level
  --observable-profasi-hydrophobicity-improved-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-hydrophobicity-improved-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-hydrophobicity-improved-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                          observable.
  --observable-profasi-hydrophobicity-improved-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported 
                                                                                          ("pdb-header":output information to header in dumped pdb 
                                                                                          files; "pdb-b-factor":output information to b-factors in 
                                                                                          dumped pdb files; "stdout|cout|stderr|cerr": Output to 
                                                                                          stdout|stderr. Any other string is interpreted as a 
                                                                                          filename for a separate logfile.
  --observable-profasi-hydrophobicity-improved-output-interval arg (=1)                   How often to register/calculate observable. This value will
                                                                                          only be read whenever an observable is active (i.e. 
                                                                                          iteration number matches register-interval)

profasi-sidechain-charge: Profasi sidechain charge term (observable):
  --observable-profasi-sidechain-charge [=arg(= )]                                 Activate observable-profasi-sidechain-charge [number of 
                                                                                   occurrences]
  --observable-profasi-sidechain-charge-debug arg (=0)                             Debug level
  --observable-profasi-sidechain-charge-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-sidechain-charge-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-sidechain-charge-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                   observable.
  --observable-profasi-sidechain-charge-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                                   information to header in dumped pdb files; "pdb-b-factor":output 
                                                                                   information to b-factors in dumped pdb files; 
                                                                                   "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other 
                                                                                   string is interpreted as a filename for a separate logfile.
  --observable-profasi-sidechain-charge-output-interval arg (=1)                   How often to register/calculate observable. This value will only 
                                                                                   be read whenever an observable is active (i.e. iteration number 
                                                                                   matches register-interval)

profasi-sidechain-charge: Profasi sidechain charge term - cached version(observable):
  --observable-profasi-sidechain-charge-cached [=arg(= )]                                 Activate observable-profasi-sidechain-charge-cached [number
                                                                                          of occurrences]
  --observable-profasi-sidechain-charge-cached-debug arg (=0)                             Debug level
  --observable-profasi-sidechain-charge-cached-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-sidechain-charge-cached-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-sidechain-charge-cached-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                          observable.
  --observable-profasi-sidechain-charge-cached-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported 
                                                                                          ("pdb-header":output information to header in dumped pdb 
                                                                                          files; "pdb-b-factor":output information to b-factors in 
                                                                                          dumped pdb files; "stdout|cout|stderr|cerr": Output to 
                                                                                          stdout|stderr. Any other string is interpreted as a 
                                                                                          filename for a separate logfile.
  --observable-profasi-sidechain-charge-cached-output-interval arg (=1)                   How often to register/calculate observable. This value will
                                                                                          only be read whenever an observable is active (i.e. 
                                                                                          iteration number matches register-interval)

profasi-sidechain-charge: Profasi sidechain charge term - improved version(observable):
  --observable-profasi-sidechain-charge-improved [=arg(= )]                                 Activate observable-profasi-sidechain-charge-improved 
                                                                                            [number of occurrences]
  --observable-profasi-sidechain-charge-improved-debug arg (=0)                             Debug level
  --observable-profasi-sidechain-charge-improved-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-sidechain-charge-improved-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-sidechain-charge-improved-register-burnin arg (=0)                   After how many iterations to start 
                                                                                            registering/calculating observable.
  --observable-profasi-sidechain-charge-improved-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported 
                                                                                            ("pdb-header":output information to header in dumped pdb 
                                                                                            files; "pdb-b-factor":output information to b-factors in 
                                                                                            dumped pdb files; "stdout|cout|stderr|cerr": Output to 
                                                                                            stdout|stderr. Any other string is interpreted as a 
                                                                                            filename for a separate logfile.
  --observable-profasi-sidechain-charge-improved-output-interval arg (=1)                   How often to register/calculate observable. This value 
                                                                                            will only be read whenever an observable is active (i.e. 
                                                                                            iteration number matches register-interval)

profasi-proline-phi-torsion: Profasi proline phi torsion term(observable):
  --observable-profasi-proline-phi-torsion [=arg(= )]                                 Activate observable-profasi-proline-phi-torsion [number of 
                                                                                      occurrences]
  --observable-profasi-proline-phi-torsion-debug arg (=0)                             Debug level
  --observable-profasi-proline-phi-torsion-weight arg (=1.67857)                      Weight used when summing energy terms
  --observable-profasi-proline-phi-torsion-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-profasi-proline-phi-torsion-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                      observable.
  --observable-profasi-proline-phi-torsion-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported 
                                                                                      ("pdb-header":output information to header in dumped pdb files;
                                                                                      "pdb-b-factor":output information to b-factors in dumped pdb 
                                                                                      files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any 
                                                                                      other string is interpreted as a filename for a separate 
                                                                                      logfile.
  --observable-profasi-proline-phi-torsion-output-interval arg (=1)                   How often to register/calculate observable. This value will 
                                                                                      only be read whenever an observable is active (i.e. iteration 
                                                                                      number matches register-interval)

saxs-debye (observable):
  --observable-saxs-debye [=arg(= )]                                 Activate observable-saxs-debye [number of occurrences]
  --observable-saxs-debye-debug arg (=0)                             Debug level
  --observable-saxs-debye-weight arg (=1)                            Weight used when summing energy terms
  --observable-saxs-debye-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-saxs-debye-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-saxs-debye-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information to 
                                                                     header in dumped pdb files; "pdb-b-factor":output information to b-factors in 
                                                                     dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other 
                                                                     string is interpreted as a filename for a separate logfile.
  --observable-saxs-debye-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                     whenever an observable is active (i.e. iteration number matches 
                                                                     register-interval)
  --observable-saxs-debye-saxs-intensities-filename arg              path to file containing SAXS intensities
  --observable-saxs-debye-saxs-form-factors-filename arg             path to file containing SAXS form factors
  --observable-saxs-debye-exp-errors-alpha arg (=0.15)               alpha parameter for experimental error term
  --observable-saxs-debye-exp-errors-beta arg (=0.3)                 beta parameter for experimental error term
  --observable-saxs-debye-q-bins arg (=51)                           number of q-bins used in the curve calculation
  --observable-saxs-debye-q-bins-first arg (=0)                      energy evaluation starts at this q-bin (default: 0). the first bin is used for 
                                                                     normalization
  --observable-saxs-debye-one-body-model arg (=0)                    use one-body instead of two-body form factor model
  --observable-saxs-debye-use-sine-lookup-table arg (=1)             use sin() lookup table instead of the full trigonometric evaluation

Basilisk explicit energy function (observable):
  --observable-basilisk [=arg(= )]                                                            Activate observable-basilisk [number of occurrences]
  --observable-basilisk-debug arg (=0)                                                        Debug level
  --observable-basilisk-weight arg (=1)                                                       Weight used when summing energy terms
  --observable-basilisk-register-interval arg (=5000)                                         How often to register/calculate observable.
  --observable-basilisk-register-burnin arg (=0)                                              After how many iterations to start 
                                                                                              registering/calculating observable.
  --observable-basilisk-output-target arg (=observables_%p_%t.dat)                            How/Where the observable should be reported 
                                                                                              ("pdb-header":output information to header in dumped 
                                                                                              pdb files; "pdb-b-factor":output information to 
                                                                                              b-factors in dumped pdb files; 
                                                                                              "stdout|cout|stderr|cerr": Output to stdout|stderr. Any
                                                                                              other string is interpreted as a filename for a 
                                                                                              separate logfile.
  --observable-basilisk-output-interval arg (=1)                                              How often to register/calculate observable. This value 
                                                                                              will only be read whenever an observable is active 
                                                                                              (i.e. iteration number matches register-interval)
  --observable-basilisk-mocapy-dbn-dir arg (=/home/subhodeep/local/phaistos/data/mocapy_dbns) Path to mocapy model file directory.
  --observable-basilisk-model-filename arg (=basilisk.dbn)                                    Model filename
  --observable-basilisk-use-cache arg (=1)                                                    Use the cached version of the term (should be faster)
  --observable-basilisk-ignore-bb arg (=0)                                                    Use the backbone independent version instead
  --observable-basilisk-eliminate-move-bias arg (=0)                                          Divide out the move-bias of the corresponding moves. 
                                                                                              Equivalent to (but faster than) setting implicit-energy
                                                                                              to false.

Compas explicit energy function (observable):
  --observable-compas [=arg(= )]                                                            Activate observable-compas [number of occurrences]
  --observable-compas-debug arg (=0)                                                        Debug level
  --observable-compas-weight arg (=1)                                                       Weight used when summing energy terms
  --observable-compas-register-interval arg (=5000)                                         How often to register/calculate observable.
  --observable-compas-register-burnin arg (=0)                                              After how many iterations to start 
                                                                                            registering/calculating observable.
  --observable-compas-output-target arg (=observables_%p_%t.dat)                            How/Where the observable should be reported 
                                                                                            ("pdb-header":output information to header in dumped pdb 
                                                                                            files; "pdb-b-factor":output information to b-factors in 
                                                                                            dumped pdb files; "stdout|cout|stderr|cerr": Output to 
                                                                                            stdout|stderr. Any other string is interpreted as a 
                                                                                            filename for a separate logfile.
  --observable-compas-output-interval arg (=1)                                              How often to register/calculate observable. This value 
                                                                                            will only be read whenever an observable is active (i.e. 
                                                                                            iteration number matches register-interval)
  --observable-compas-mocapy-dbn-dir arg (=/home/subhodeep/local/phaistos/data/mocapy_dbns) Path to mocapy model file directory.
  --observable-compas-model-filename arg (=compas.dbn)                                      Model filename
  --observable-compas-use-cache arg (=1)                                                    Use the cached version of the term (should be faster)
  --observable-compas-ignore-bb arg (=0)                                                    Use the backbone independent version instead
  --observable-compas-eliminate-move-bias arg (=0)                                          Divide out the move-bias of the corresponding moves. 
                                                                                            Equivalent to (but faster than) setting implicit-energy 
                                                                                            to false.

xtc-trajectory: Dump xtc trajectory information (observable):
  --observable-xtc-trajectory [=arg(= )]                                Activate observable-xtc-trajectory [number of occurrences]
  --observable-xtc-trajectory-debug arg (=0)                            Debug level
  --observable-xtc-trajectory-weight arg (=1)                           Weight used when summing energy terms
  --observable-xtc-trajectory-register-interval arg (=5000)             How often to register/calculate observable.
  --observable-xtc-trajectory-register-burnin arg (=0)                  After how many iterations to start registering/calculating observable.
  --observable-xtc-trajectory-output-target arg (=trajectory_%p_%t.xtc) How/Where the observable should be reported ("pdb-header":output information 
                                                                        to header in dumped pdb files; "pdb-b-factor":output information to b-factors
                                                                        in dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any 
                                                                        other string is interpreted as a filename for a separate logfile.
  --observable-xtc-trajectory-output-interval arg (=1)                  How often to register/calculate observable. This value will only be read 
                                                                        whenever an observable is active (i.e. iteration number matches 
                                                                        register-interval)

Constrain distances in a protein like HBond networks, C alpha contacts or disulfide bonds (observable):
  --observable-constrain-distances [=arg(= )]                                 Activate observable-constrain-distances [number of occurrences]
  --observable-constrain-distances-debug arg (=0)                             Debug level
  --observable-constrain-distances-weight arg (=1)                            Weight used when summing energy terms
  --observable-constrain-distances-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-constrain-distances-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-constrain-distances-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                              information to header in dumped pdb files; "pdb-b-factor":output 
                                                                              information to b-factors in dumped pdb files; 
                                                                              "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other string is
                                                                              interpreted as a filename for a separate logfile.
  --observable-constrain-distances-output-interval arg (=1)                   How often to register/calculate observable. This value will only be 
                                                                              read whenever an observable is active (i.e. iteration number matches 
                                                                              register-interval)
  --observable-constrain-distances-network-filename arg                       Restore network from a file.
  --observable-constrain-distances-pdb-file arg                               Path to PDB input file.
  --observable-constrain-distances-include-bb-hbond arg (=1)                  Include backbone-backbone hydrogen bonds in the network
  --observable-constrain-distances-include-sc-hbond arg (=1)                  Include sidechain-sidechain hydrogen bonds in the network
  --observable-constrain-distances-include-bb-sc-hbond arg (=1)               Include backbone-sidechain hydrogen bonds in the network
  --observable-constrain-distances-include-ca-contacts arg (=1)               Include CA-CA contacts in the network
  --observable-constrain-distances-include-fixed-point-contacts arg (=0)      Include contacts between atoms and fixed points in space
  --observable-constrain-distances-include-ss-bond arg (=1)                   Include disulfide bonds (SS bonds) in the network
  --observable-constrain-distances-init-hbond-from-native arg (=0)            Whether to initialize ideal hbond distances from PDB file (rather than 
                                                                              averages from the Top500 database)
  --observable-constrain-distances-prune-network arg (=6)                     Whether to prune/optimize the hbond network
  --observable-constrain-distances-dehydron-bb-cutoff arg (=14)               Cutoff below which backbone-backbone hydrogen bonds are considered as 
                                                                              dehydrated aka weak/broken
  --observable-constrain-distances-dehydron-bb-sc-cutoff arg (=9)             Cutoff below which backbone-sidechain hydrogen bonds are considered as 
                                                                              dehydrated aka weak/broken
  --observable-constrain-distances-dehydron-sc-cutoff arg (=7)                Cutoff below which sidechain-sidechain hydrogen bonds are considered as
                                                                              dehydrated aka weak/broken
  --observable-constrain-distances-ca-distance arg (=6)                       Cutoff distance in Angstrom to be considered a Calpha contact
  --observable-constrain-distances-ss-distance arg (=3)                       Cutoff distance in Angstrom to be considered a disulfide contact
  --observable-constrain-distances-ca-skip arg (=5)                           How many residues to skip along the chain before considering a Calpha 
                                                                              contact
  --observable-constrain-distances-bb-hbond-skip arg (=1)                     How many residues to skip along the chain before considering a 
                                                                              backbone-backbone hydrogen bond contact
  --observable-constrain-distances-sc-hbond-skip arg (=1)                     How many residues to skip along the chain before considering a 
                                                                              sidechain-sidechain hydrogen bond contact
  --observable-constrain-distances-bb-sc-hbond-skip arg (=1)                  How many residues to skip along the chain before considering a 
                                                                              backbone-sidechain hydrogen bond contact
  --observable-constrain-distances-ss-skip arg (=1)                           How many residues to skip along the chain before considering a 
                                                                              disulfide contact
  --observable-constrain-distances-generate-pymol arg (=0)                    Whether to generate a Python script that will visualize the network in 
                                                                              PyMOL
  --observable-constrain-distances-use-caching (recommended) arg (=1)         Whether to cache interations
  --observable-constrain-distances-verbose arg (=0)                           Whether to print out additional information (recommended)

Lock disulfide bonds found in proteins in place (observable):
  --observable-constrain-disulfide-bonds [=arg(= )]                                 Activate observable-constrain-disulfide-bonds [number of 
                                                                                    occurrences]
  --observable-constrain-disulfide-bonds-debug arg (=0)                             Debug level
  --observable-constrain-disulfide-bonds-weight arg (=1)                            Weight used when summing energy terms
  --observable-constrain-disulfide-bonds-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-constrain-disulfide-bonds-register-burnin arg (=0)                   After how many iterations to start registering/calculating 
                                                                                    observable.
  --observable-constrain-disulfide-bonds-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output 
                                                                                    information to header in dumped pdb files; "pdb-b-factor":output 
                                                                                    information to b-factors in dumped pdb files; 
                                                                                    "stdout|cout|stderr|cerr": Output to stdout|stderr. Any other 
                                                                                    string is interpreted as a filename for a separate logfile.
  --observable-constrain-disulfide-bonds-output-interval arg (=1)                   How often to register/calculate observable. This value will only 
                                                                                    be read whenever an observable is active (i.e. iteration number 
                                                                                    matches register-interval)
  --observable-constrain-disulfide-bonds-network-filename arg                       Restore network from a file.
  --observable-constrain-disulfide-bonds-include-ss-bond arg (=1)                   Include disulfide bonds (SS bonds) in the network
  --observable-constrain-disulfide-bonds-ss-distance arg (=3)                       Default CYS(SG)-CYS(SG) cutoff distance.
  --observable-constrain-disulfide-bonds-ss-skip arg (=1)                           Default minimum CYS-CYS distance in the chain.
  --observable-constrain-disulfide-bonds-generate-pymol arg (=0)                    Whether to generate a Python script that will visualize the 
                                                                                    network in PyMOL
  --observable-constrain-disulfide-bonds-use-caching (recommended) arg (=1)         Whether to cache interations
  --observable-constrain-disulfide-bonds-verbose arg (=0)                           Whether to print out additional information (recommended)

Visible Volume AA (observable):
  --observable-visible-volume [=arg(= )]                                 Activate observable-visible-volume [number of occurrences]
  --observable-visible-volume-debug arg (=0)                             Debug level
  --observable-visible-volume-weight arg (=1)                            Weight used when summing energy terms
  --observable-visible-volume-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-visible-volume-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-visible-volume-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information
                                                                         to header in dumped pdb files; "pdb-b-factor":output information to 
                                                                         b-factors in dumped pdb files; "stdout|cout|stderr|cerr": Output to 
                                                                         stdout|stderr. Any other string is interpreted as a filename for a separate 
                                                                         logfile.
  --observable-visible-volume-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                         whenever an observable is active (i.e. iteration number matches 
                                                                         register-interval)
  --observable-visible-volume-sphere-radius arg (=11)                    Max distance to neighbors considered (angstroms)
  --observable-visible-volume-min-sphere-points arg (=1000)              Minimum number of discrete angle points in model
  --observable-visible-volume-atom-radius arg (=1.8)                     Disk radius of atom neighbors (angstroms)
  --observable-visible-volume-volume arg (=1)                            Calculate visible volume (observable only)
  --observable-visible-volume-angexp arg (=0)                            Calculate angular exposure (relative residue SASA analog, observable only)
  --observable-visible-volume-fscn arg (=0)                              Calculate first shell coordination number (observable only)
  --observable-visible-volume-fscn-threshold arg (=35)                   Minimum number of angle points to define contact (observable only)

backbone-dbn: Backbone DBN energy term (observable):
  --observable-backbone-dbn [=arg(= )]                                 Activate observable-backbone-dbn [number of occurrences]
  --observable-backbone-dbn-debug arg (=0)                             Debug level
  --observable-backbone-dbn-weight arg (=1)                            Weight used when summing energy terms
  --observable-backbone-dbn-register-interval arg (=5000)              How often to register/calculate observable.
  --observable-backbone-dbn-register-burnin arg (=0)                   After how many iterations to start registering/calculating observable.
  --observable-backbone-dbn-output-target arg (=observables_%p_%t.dat) How/Where the observable should be reported ("pdb-header":output information 
                                                                       to header in dumped pdb files; "pdb-b-factor":output information to b-factors 
                                                                       in dumped pdb files; "stdout|cout|stderr|cerr": Output to stdout|stderr. Any 
                                                                       other string is interpreted as a filename for a separate logfile.
  --observable-backbone-dbn-output-interval arg (=1)                   How often to register/calculate observable. This value will only be read 
                                                                       whenever an observable is active (i.e. iteration number matches 
                                                                       register-interval)
  --observable-backbone-dbn-enable-dbn-update arg (=1)                 Whether to update the angles in the DBN from the chain when necessary.
  --observable-backbone-dbn-always-full-update arg (=0)                Whether to always force update of all angles in the DBN from the chain.
  --observable-backbone-dbn-window-size arg (=-1)                      Size of window used when calculating the energy. A good value for the window 
                                                                       size is >7, and a negative window size means that the full bias is used.
  --observable-backbone-dbn-eliminate-move-bias arg (=0)               Divide out the move-bias of the corresponding moves. Equivalent to (but faster
                                                                       than) setting implicit-energy to false.


##############################
#### BACKBONE-DBN OPTIONS ####
##############################

TorusDbn options:
  --backbone-dbn-torus [=arg(= )]                                Activate backbone-dbn-torus [number of occurrences]
  --backbone-dbn-torus-debug arg (=0)                            Debug level
  --backbone-dbn-torus-log-space arg (=0)                        Whether DBN calculations should be done in log space.
  --backbone-dbn-torus-dbn-start-distribution arg (=normal)      N-terminus probability: normal|uniform|stationary
  --backbone-dbn-torus-dbn-transition-distribution arg (=normal) Transition distribution: normal|uniform|stationary
  --backbone-dbn-torus-parameter-file arg                        parameter file name
  --backbone-dbn-torus-sequence-length arg (=-1)                 Set sequence length in model (only necessary when no input sequence is given)
  --backbone-dbn-torus-initial-pdb-file arg                      Input from PDB file
  --backbone-dbn-torus-initial-aa-sequence arg                   Input from amino acid sequence
  --backbone-dbn-torus-initial-aa-file arg                       Input from amino acid sequence file
  --backbone-dbn-torus-initial-ss-sequence arg                   Input from secondary structure sequence
  --backbone-dbn-torus-initial-ss-file arg                       Input from secondary structure file
  --backbone-dbn-torus-initial-cis-sequence arg                  Cis sequence
  --backbone-dbn-torus-initial-cis-file arg                      Cis filename

TorusOmegaDbn options:
  --backbone-dbn-torus-omega [=arg(= )]                                Activate backbone-dbn-torus-omega [number of occurrences]
  --backbone-dbn-torus-omega-debug arg (=0)                            Debug level
  --backbone-dbn-torus-omega-log-space arg (=0)                        Whether DBN calculations should be done in log space.
  --backbone-dbn-torus-omega-dbn-start-distribution arg (=normal)      N-terminus probability: normal|uniform|stationary
  --backbone-dbn-torus-omega-dbn-transition-distribution arg (=normal) Transition distribution: normal|uniform|stationary
  --backbone-dbn-torus-omega-parameter-file arg                        parameter file name
  --backbone-dbn-torus-omega-sequence-length arg (=-1)                 Set sequence length in model (only necessary when no input sequence is given)
  --backbone-dbn-torus-omega-initial-pdb-file arg                      Input from PDB file
  --backbone-dbn-torus-omega-initial-aa-sequence arg                   Input from amino acid sequence
  --backbone-dbn-torus-omega-initial-aa-file arg                       Input from amino acid sequence file
  --backbone-dbn-torus-omega-initial-ss-sequence arg                   Input from secondary structure sequence
  --backbone-dbn-torus-omega-initial-ss-file arg                       Input from secondary structure file
  --backbone-dbn-torus-omega-initial-cis-sequence arg                  Cis sequence
  --backbone-dbn-torus-omega-initial-cis-file arg                      Cis filename
  --backbone-dbn-torus-omega-initial-omega-sequence arg                Omega sequence
  --backbone-dbn-torus-omega-initial-omega-file arg                    Omega filename

Fb5Dbn options:
  --backbone-dbn-fb5 [=arg(= )]                                Activate backbone-dbn-fb5 [number of occurrences]
  --backbone-dbn-fb5-debug arg (=0)                            Debug level
  --backbone-dbn-fb5-log-space arg (=0)                        Whether DBN calculations should be done in log space.
  --backbone-dbn-fb5-dbn-start-distribution arg (=normal)      N-terminus probability: normal|uniform|stationary
  --backbone-dbn-fb5-dbn-transition-distribution arg (=normal) Transition distribution: normal|uniform|stationary
  --backbone-dbn-fb5-parameter-file arg                        parameter file name
  --backbone-dbn-fb5-sequence-length arg (=-1)                 Set sequence length in model (only necessary when no input sequence is given)
  --backbone-dbn-fb5-initial-pdb-file arg                      Input from PDB file
  --backbone-dbn-fb5-initial-aa-sequence arg                   Input from amino acid sequence
  --backbone-dbn-fb5-initial-aa-file arg                       Input from amino acid sequence file
  --backbone-dbn-fb5-initial-ss-sequence arg                   Input from secondary structure sequence
  --backbone-dbn-fb5-initial-ss-file arg                       Input from secondary structure file

TorusDbnCs options:
  --backbone-dbn-torus-cs [=arg(= )]                                Activate backbone-dbn-torus-cs [number of occurrences]
  --backbone-dbn-torus-cs-debug arg (=0)                            Debug level
  --backbone-dbn-torus-cs-log-space arg (=0)                        Whether DBN calculations should be done in log space.
  --backbone-dbn-torus-cs-dbn-start-distribution arg (=normal)      N-terminus probability: normal|uniform|stationary
  --backbone-dbn-torus-cs-dbn-transition-distribution arg (=normal) Transition distribution: normal|uniform|stationary
  --backbone-dbn-torus-cs-parameter-file arg                        parameter file name
  --backbone-dbn-torus-cs-sequence-length arg (=-1)                 Set sequence length in model (only necessary when no input sequence is given)
  --backbone-dbn-torus-cs-initial-pdb-file arg                      Input from PDB file
  --backbone-dbn-torus-cs-initial-aa-sequence arg                   Input from amino acid sequence
  --backbone-dbn-torus-cs-initial-aa-file arg                       Input from amino acid sequence file
  --backbone-dbn-torus-cs-initial-ss-sequence arg                   Input from secondary structure sequence
  --backbone-dbn-torus-cs-initial-ss-file arg                       Input from secondary structure file
  --backbone-dbn-torus-cs-initial-cis-sequence arg                  Cis sequence
  --backbone-dbn-torus-cs-initial-cis-file arg                      Cis filename
  --backbone-dbn-torus-cs-initial-cs-ca-sequence arg                Chemical shift CA sequence
  --backbone-dbn-torus-cs-initial-cs-ca-file arg                    Chemical shift CA file
  --backbone-dbn-torus-cs-initial-cs-cb-sequence arg                Chemical shift CB sequence
  --backbone-dbn-torus-cs-initial-cs-cb-file arg                    Chemical shift CB file
  --backbone-dbn-torus-cs-initial-cs-c-sequence arg                 Chemical shift C sequence
  --backbone-dbn-torus-cs-initial-cs-c-file arg                     Chemical shift C file
  --backbone-dbn-torus-cs-initial-cs-n-sequence arg                 Chemical shift N sequence
  --backbone-dbn-torus-cs-initial-cs-n-file arg                     Chemical shift N file
  --backbone-dbn-torus-cs-initial-cs-ha-sequence arg                Chemical shift HA sequence
  --backbone-dbn-torus-cs-initial-cs-ha-file arg                    Chemical shift HA file
  --backbone-dbn-torus-cs-initial-cs-h-sequence arg                 Chemical shift H sequence
  --backbone-dbn-torus-cs-initial-cs-h-file arg                     Chemical shift H file
  --backbone-dbn-torus-cs-initial-cs-sequence arg                   Chemical shift sequence - all in one. Order: CA,CB,C,N,HA,H
  --backbone-dbn-torus-cs-initial-cs-file arg                       Chemical shift file - all in one. Order: CA,CB,C,N,HA,H 
  --backbone-dbn-torus-cs-initial-cs-nmr-star-file arg              Chemical shift file - all in one, using CS-section of nmr-star format (BMRB)
  --backbone-dbn-torus-cs-initial-cs-ca-offset arg (=0)             CA chemical shift offset (for re-referencing)
  --backbone-dbn-torus-cs-initial-cs-cb-offset arg (=0)             CB chemical shift offset (for re-referencing)
  --backbone-dbn-torus-cs-initial-cs-c-offset arg (=0)              C chemical shift offset (for re-referencing)
  --backbone-dbn-torus-cs-initial-cs-n-offset arg (=0)              N chemical shift offset (for re-referencing)
  --backbone-dbn-torus-cs-initial-cs-ha-offset arg (=0)             HA chemical shift offset (for re-referencing)
  --backbone-dbn-torus-cs-initial-cs-h-offset arg (=0)              H chemical shift offset (for re-referencing)

TorusCsOmegaDbn options:
  --backbone-dbn-torus-cs-omega [=arg(= )]                                Activate backbone-dbn-torus-cs-omega [number of occurrences]
  --backbone-dbn-torus-cs-omega-debug arg (=0)                            Debug level
  --backbone-dbn-torus-cs-omega-log-space arg (=0)                        Whether DBN calculations should be done in log space.
  --backbone-dbn-torus-cs-omega-dbn-start-distribution arg (=normal)      N-terminus probability: normal|uniform|stationary
  --backbone-dbn-torus-cs-omega-dbn-transition-distribution arg (=normal) Transition distribution: normal|uniform|stationary
  --backbone-dbn-torus-cs-omega-parameter-file arg                        parameter file name
  --backbone-dbn-torus-cs-omega-sequence-length arg (=-1)                 Set sequence length in model (only necessary when no input sequence is 
                                                                          given)
  --backbone-dbn-torus-cs-omega-initial-pdb-file arg                      Input from PDB file
  --backbone-dbn-torus-cs-omega-initial-aa-sequence arg                   Input from amino acid sequence
  --backbone-dbn-torus-cs-omega-initial-aa-file arg                       Input from amino acid sequence file
  --backbone-dbn-torus-cs-omega-initial-ss-sequence arg                   Input from secondary structure sequence
  --backbone-dbn-torus-cs-omega-initial-ss-file arg                       Input from secondary structure file
  --backbone-dbn-torus-cs-omega-initial-cis-sequence arg                  Cis sequence
  --backbone-dbn-torus-cs-omega-initial-cis-file arg                      Cis filename
  --backbone-dbn-torus-cs-omega-initial-omega-sequence arg                Omega sequence
  --backbone-dbn-torus-cs-omega-initial-omega-file arg                    Omega filename
  --backbone-dbn-torus-cs-omega-initial-cs-ca-sequence arg                Chemical shift CA sequence
  --backbone-dbn-torus-cs-omega-initial-cs-ca-file arg                    Chemical shift CA file
  --backbone-dbn-torus-cs-omega-initial-cs-cb-sequence arg                Chemical shift CB sequence
  --backbone-dbn-torus-cs-omega-initial-cs-cb-file arg                    Chemical shift CB file
  --backbone-dbn-torus-cs-omega-initial-cs-c-sequence arg                 Chemical shift C sequence
  --backbone-dbn-torus-cs-omega-initial-cs-c-file arg                     Chemical shift C file
  --backbone-dbn-torus-cs-omega-initial-cs-n-sequence arg                 Chemical shift N sequence
  --backbone-dbn-torus-cs-omega-initial-cs-n-file arg                     Chemical shift N file
  --backbone-dbn-torus-cs-omega-initial-cs-ha-sequence arg                Chemical shift HA sequence
  --backbone-dbn-torus-cs-omega-initial-cs-ha-file arg                    Chemical shift HA file
  --backbone-dbn-torus-cs-omega-initial-cs-h-sequence arg                 Chemical shift H sequence
  --backbone-dbn-torus-cs-omega-initial-cs-h-file arg                     Chemical shift H file
  --backbone-dbn-torus-cs-omega-initial-cs-sequence arg                   Chemical shift sequence - all in one. Order: CA,CB,C,N,HA,H
  --backbone-dbn-torus-cs-omega-initial-cs-file arg                       Chemical shift file - all in one. Order: CA,CB,C,N,HA,H 
  --backbone-dbn-torus-cs-omega-initial-cs-nmr-star-file arg              Chemical shift file - all in one, using CS-section of nmr-star format 
                                                                          (BMRB)
  --backbone-dbn-torus-cs-omega-initial-cs-ca-offset arg (=0)             CA chemical shift offset (for re-referencing)
  --backbone-dbn-torus-cs-omega-initial-cs-cb-offset arg (=0)             CB chemical shift offset (for re-referencing)
  --backbone-dbn-torus-cs-omega-initial-cs-c-offset arg (=0)              C chemical shift offset (for re-referencing)
  --backbone-dbn-torus-cs-omega-initial-cs-n-offset arg (=0)              N chemical shift offset (for re-referencing)
  --backbone-dbn-torus-cs-omega-initial-cs-ha-offset arg (=0)             HA chemical shift offset (for re-referencing)
  --backbone-dbn-torus-cs-omega-initial-cs-h-offset arg (=0)              H chemical shift offset (for re-referencing)


